{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "info@timeweb.cloud"
    },
    "title": "Документация публичного API",
    "version": "",
    "description": "# Введение\nAPI Timeweb Cloud позволяет вам управлять ресурсами в облаке программным способом с использованием обычных HTTP-запросов.\n\nМножество функции, которые доступны в панели управления Timeweb Cloud, также доступны через API, что позволяет вам автоматизировать ваши собственные сценарии.\n\nВ этой документации сперва будет описан общий дизайн и принципы работы API, а после этого конкретные конечные точки. Также будут приведены примеры запросов к ним.\n\n\n## Запросы\nЗапросы должны выполняться по протоколу `HTTPS`, чтобы гарантировать шифрование транзакций. Поддерживаются следующие методы запроса:\n|Метод|Применение|\n|--- |--- |\n|GET|Извлекает данные о коллекциях и отдельных ресурсах.|\n|POST|Для коллекций создает новый ресурс этого типа. Также используется для выполнения действий с конкретным ресурсом.|\n|PUT|Обновляет существующий ресурс.|\n|PATCH|Некоторые ресурсы поддерживают частичное обновление, то есть обновление только части атрибутов ресурса, в этом случае вместо метода PUT будет использован PATCH.|\n|DELETE|Удаляет ресурс.|\n\nМетоды `POST`, `PUT` и `PATCH` могут включать объект в тело запроса с типом содержимого `application/json`.\n\n### Параметры в запросах\nНекоторые коллекции поддерживают пагинацию, поиск или сортировку в запросах. В параметрах запроса требуется передать:\n- `limit` — обозначает количество записей, которое необходимо вернуть\n - `offset` — указывает на смещение, относительно начала списка\n - `search` — позволяет указать набор символов для поиска\n - `sort` — можно задать правило сортировки коллекции\n\n## Ответы\nЗапросы вернут один из следующих кодов состояния ответа HTTP:\n\n|Статус|Описание|\n|--- |--- |\n|200 OK|Действие с ресурсом было выполнено успешно.|\n|201 Created|Ресурс был успешно создан. При этом ресурс может быть как уже готовым к использованию, так и находится в процессе запуска.|\n|204 No Content|Действие с ресурсом было выполнено успешно и ответ не содержит дополнительной информации в теле.|\n|400 Bad Request|Был отправлен неверный запрос, например, в нем отсутствуют обязательные параметры и т. д. Тело ответа будет содержать дополнительную информацию об ошибке.|\n|401 Unauthorized|Ошибка аутентификации.|\n|403 Forbidden|Аутентификация прошла успешно, но не достаточно прав для выполнения действия.|\n|404 Not Found|Запрашиваемый ресурс не найден.|\n|409 Conflict|Запрос конфликтует с текущим состоянием.|\n|423 Locked|Ресурс из запроса заблокирован от применения к нему указанного метода.|\n|429 Too Many Requests|Был достигнут лимит по количеству запросов в единицу времени.|\n|500 Internal Server Error|При выполнении запроса произошла какая-то внутренняя ошибка. Чтобы решить эту проблему лучше всего создать тикет в панели управления.|\n\n### Структура успешного ответа\nВсе конечные точки будут возвращать данные в формате `JSON`. Ответы на `GET`-запросы будут иметь на верхнем уровне следующую структуру атрибутов: \n|Название поля|Тип|Описание|\n|--- |--- |--- |\n|[entity_name]|object, object[], string[], number[]|Динамическое поле, которое будет меняться в зависимости от запрашиваемого ресурса и будет содержать все атрибуты, необходимые для описания этого ресурса. Например, при запросе списка баз данных будет возвращаться поле `dbs`, а при запросе конкретного облачного сервера `server`. Для некоторых конечных точек в ответе может возвращаться сразу несколько ресурсов.|\n|meta|object|Опционально. Объект, который содержит вспомогательную информацию о ресурсе. Чаще всего будет встречаться при запросе коллекций и содержать поле `total`, которое будет указывать на количество элементов в коллекции.|\n|response_id|string|Опционально. В большинстве случае в ответе будет содержаться уникальный идентификатор ответа в формате UUIDv4, который однозначно указывает на ваш запрос внутри нашей системы. Если вам потребуется задать вопрос нашей поддержке, то приложив к вопросу этот идентификатор, мы сможем найти ответ на него намного быстрее. Также вы можете использовать этот идентификатор, чтобы убедиться, что это новый ответ на запрос и результат не был получен из кэша.|\n\nПример запроса на получение списка ssh-ключей:\n```\n    HTTP/2.0 200 OK\n    {\n      \"ssh_keys\":[\n          {\n            \"body\":\"ssh-rsa AAAAB3NzaC1sdfghjkOAsBwWhs= example@device.local\",\n            \"created_at\":\"2021-09-15T19:52:27Z\",\n            \"expired_at\":null,\n            \"id\":5297,\n            \"is_default\":false,\n            \"name\":\"example@device.local\",\n            \"used_at\":null,\n            \"used_by\":[]\n          }\n      ],\n      \"meta\":{\n          \"total\":1\n      },\n      \"response_id\":\"94608d15-8672-4eed-8ab6-28bd6fa3cdf7\"\n    }\n```\n\n### Структура ответа с ошибкой\n|Название поля|Тип|Описание|\n|--- |--- |--- |\n|status_code|number|Короткий числовой идентификатор ошибки.|\n|error_code|string|Короткий текстовый идентификатор ошибки, который уточняет числовой идентификатор и удобен для программной обработки. Самый простой пример, это код `not_found` для ошибки 404.|\n|message|string, string[]|Опционально. В большинстве случаев в ответе будет содержаться человекочитаемое подробное описание ошибки или ошибок, которые помогут понять, что нужно исправить.|\n|response_id|string|Опционально. В большинстве случае в ответе будет содержаться уникальный идентификатор ответа в формате UUIDv4, который однозначно указывает на ваш запрос внутри нашей системы. Если вам потребуется задать вопрос нашей поддержке, то приложив к вопросу этот идентификатор, мы сможем найти ответ на него намного быстрее.|\n\nПример:\n```\n    HTTP/2.0 403 Forbidden\n    {\n      \"status_code\": 403,\n      \"error_code\":  \"forbidden\",\n      \"message\":     \"You do not have access for the attempted action\",\n      \"response_id\": \"94608d15-8672-4eed-8ab6-28bd6fa3cdf7\"\n    }\n```\n\n## Статусы ресурсов\nВажно учесть, что при создании большинства ресурсов внутри платформы, вам будет сразу возвращен ответ от сервера со статусом `200 OK` или `201 Created` и идентификатором созданного ресурса в теле ответа, но при этом этот ресурс может быть ещё в *состоянии запуска*.\n\nДля того, чтобы понять в каком состоянии сейчас находится ваш ресурс, мы добавили поле `status` в ответ на получении информации о ресурсе.\n\nСписок статусов будет отличаться в зависимости от типа ресурса. Увидеть поддерживаемый список статусов вы сможете в описании каждого конкретного ресурса.\n\n \n\n## Ограничение скорости запросов (Rate Limiting)\nЧтобы обеспечить стабильность для всех пользователей, Timeweb Cloud защищает API от всплесков входящего трафика анализируя количество запросов c каждого аккаунта к каждой конечной точке.\n\nЕсли ваше приложение отправляет более 20 запросов в секунду на одну конечную точку, то для этого запроса API может вернуть код состояния HTTP `429 Too Many Requests`.\n\n\n## Аутентификация\nДоступ к API осуществляется с помощью JWT-токена. Токенами можно управлять внутри панели управления Timeweb Cloud в разделе *Настройки аккаунта -> Токены API*.\n\nТокен необходимо передавать в заголовке каждого запроса в формате:\n```\n  Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\n```\n\n## Формат примеров API\nПримеры в этой документации описаны с помощью `curl`, HTTP-клиента командной строки. На компьютерах `Linux` и `macOS` обычно по-умолчанию установлен `curl`, и он доступен для загрузки на всех популярных платформах, включая `Windows`.\n\nКаждый пример разделен на несколько строк символом `\\`, который совместим с `bash`. Типичный пример выглядит так:\n```\n  curl -X PATCH \n    -H \"Content-Type: application/json\" \n    -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \n    -d '{\"name\":\"Cute Corvus\",\"comment\":\"Development Server\"}' \n    \"https://api.timeweb.cloud/api/v1/dedicated/1051\"\n```\n- Параметр `-X` задает метод запроса. Для согласованности метод будет указан во всех примерах, даже если он явно не требуется для методов `GET`.\n- Строки `-H` задают требуемые HTTP-заголовки.\n- Примеры, для которых требуется объект JSON в теле запроса, передают требуемые данные через параметр `-d`.\n\nЧтобы использовать приведенные примеры, не подставляя каждый раз в них свой токен, вы можете добавить токен один раз в переменные окружения в вашей консоли. Например, на `Linux` это можно сделать с помощью команды:\n\n```\nTIMEWEB_CLOUD_TOKEN=\"token\"\n```\n\nПосле этого токен будет автоматически подставляться в ваши запросы.\n\nОбратите внимание, что все значения в этой документации являются примерами. Не полагайтесь на идентификаторы операционных систем, тарифов и т.д., используемые в примерах. Используйте соответствующую конечную точку для получения значений перед созданием ресурсов."
  },
  "servers": [
    {
      "url": "https://api.timeweb.cloud"
    }
  ],
  "tags": [
    {
      "name": "Аккаунт",
      "description": "Группа методов, которая позволяет получить информацию о вашем текущем аккаунте. Обратите внимание, что API предоставляет только базовый функционал для получения общей информации об аккаунте.</br></br> Подробнее о работе с вашим аккаунтом в панели управления в нашей <a href='https://timeweb.cloud/docs/account-management' target='_blank'>базе знаний</a>."
    },
    {
      "name": "Базы данных",
      "description": "Облачная база данных, или База данных как сервис (DBaaS) — облачное решение для хранения структурированных данных и управления ими. DBaaS обеспечивает полностью автоматизированную, гибкую и масштабируемую платформу для работы с базами данных.</br></br> Подробнее об облачных базах данных в нашей <a href='https://timeweb.cloud/docs/dbaas' target='_blank'>базе знаний</a>."
    },
    {
      "name": "Балансировщики",
      "description": "Балансировщик позволяет распределять входящий трафик между несколькими серверами для повышения доступности и отказоустойчивости вашего сервиса.</br></br> Подробнее о балансировщике нагрузки в нашей <a href='https://timeweb.cloud/docs/load-balancer' target='_blank'>базе знаний</a>."
    },
    {
      "name": "Выделенные серверы",
      "description": "Выделенные серверы используют, когда необходимо разместить сложную нагруженную систему, для которой недостаточно мощностей виртуального хостинга или облачного сервера. Это может быть крупный сайт, интернет-магазин, любой ресурсоемкий проект.</br></br> Подробнее о выделенных серверах в нашей <a href='https://timeweb.cloud/docs/dedicated' target='_blank'>базе знаний</a>."
    },
    {
      "name": "Облачные серверы",
      "description": "Облачные серверы — это способ размещения данных, при котором вы получаете полный доступ (root-доступ) к виртуальному серверу и его настройкам. Вы можете гибко масштабировать параметры (процессор, память, диск) сервера, постепенно добавляя необходимые мощности, когда растет нагрузка, и снижать их, когда нагрузка уменьшается. Соответствующим образом будет увеличиваться или уменьшаться стоимость сервера.</br></br> Подробнее об облачных серверах в нашей <a href='https://timeweb.cloud/docs/cloud-servers' target='_blank'>базе знаний</a>."
    },
    {
      "name": "Образы",
      "description": "Образы — это полная копия вашего облачного сервера в формате `Qcow2`, со всеми настройками операционной системы, программного обеспечения и всем содержимым сервера. </br></br> Подробнее об образах в нашей <a href='https://timeweb.cloud/docs/cloud-servers/manage-servers/server-images' target='_blank'>базе знаний</a>."
    },
    {
      "name": "Проекты",
      "description": "Проекты позволяют организовать ваши ресурсы в группы, соответствующие вашему стилю работы. Вы можете группировать ресурсы (например, облачные и выделенные серверы, балансировщики нагрузки, базы данных и т.д.) таким образом, чтобы они соответствовали приложениям, которые вы размещаете в облаке."
    },
    {
      "name": "Токены API",
      "description": "Токены API — это это JWT-токены с помощью которых вы можете получить доступ к управлению через API вашей облачной инфраструктурой."
    },
    {
      "name": "Kubernetes",
      "description": "Kubernetes — программное обеспечение с открытым исходным кодом, предназначенное для автоматизированного управления контейнерными приложениями. Kubernetes обеспечит автоматическое развертывание, масштабирование, распределение нагрузки, мониторинг сервисов, обработку ошибок и многое другое. </br></br> Подробнее о Kubernetes в нашей <a href='https://timeweb.cloud/docs/k8s' target='_blank'>базе знаний</a>."
    },
    {
      "name": "S3-хранилище",
      "description": "S3-хранилище — это универсальное объектное хранилище, совместимое с Amazon S3 API, в котором можно размещать любые типы статических данных.</br></br> Подробнее о хранилище S3 в нашей <a href='https://timeweb.cloud/docs/s3-storage' target='_blank'>базе знаний</a>.</br></br>Обратите внимание, что данное API предоставляется независимо и совместно с Amazon S3 API. Описание принципов работы и список поддерживаемых методов Amazon S3 API вы можете найти в <a href='https://timeweb.cloud/docs/s3-storage/s3-guide' target='_blank'>базе знаний</a>."
    }
  ],
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/api/v1/account/finances": {
      "get": {
        "summary": "Получение платежной информации",
        "description": "Чтобы получить платежную информацию, отправьте GET запрос на `/api/v1/account/finances`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/account/finances\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `finances`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "finances": {
                          "$ref": "#/components/schemas/finances"
                        }
                      },
                      "required": [
                        "finances"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Аккаунт"
        ]
      }
    },
    "/api/v1/account/status": {
      "get": {
        "summary": "Получение статуса аккаунта",
        "description": "Чтобы получить статус аккаунта, отправьте GET запрос на `/api/v1/account/status`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/account/status\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `status`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "$ref": "#/components/schemas/status"
                        }
                      },
                      "required": [
                        "status"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Аккаунт"
        ]
      }
    },
    "/api/v1/images": {
      "get": {
        "tags": [
          "Образы"
        ],
        "summary": "Получение списка образов",
        "operationId": "Получение_списка_образов_api_v1__account__images_get",
        "description": "Чтобы получить список образов, отправьте GET запрос на `/api/v1/images`",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом images",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ImagesOutResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "c540d1ac-bab7-4f7d-a358-487c198873df",
                  "meta": {
                    "total": 5
                  },
                  "images": [
                    {
                      "id": "dd36914d-ce95-4e0b-a4df-8a4e7c53b2be",
                      "status": "new",
                      "created_at": "2022-12-23T11:50:25.770936",
                      "size": 16777216,
                      "description": "image of vds disk",
                      "disk_id": 10308,
                      "location": "ru-1"
                    },
                    {
                      "id": "e1db7ed8-d0d2-42b9-8c8d-3ec8785a321b",
                      "status": "new",
                      "created_at": "2022-12-23T11:50:25.770982",
                      "size": 16777216,
                      "description": "image of vds disk",
                      "disk_id": 531426,
                      "location": "ru-1"
                    },
                    {
                      "id": "311cd1be-b166-4056-9419-7e7127a21d47",
                      "status": "new",
                      "created_at": "2022-12-23T11:50:25.771020",
                      "size": 33554432,
                      "description": "image of vds disk",
                      "disk_id": 541121,
                      "location": "ru-1"
                    },
                    {
                      "id": "9cfc681c-d045-437f-a26e-99eb97247bcd",
                      "status": "new",
                      "created_at": "2022-12-23T11:50:25.771055",
                      "size": 33554432,
                      "description": "image of vds disk",
                      "disk_id": 706849,
                      "location": "ru-1"
                    },
                    {
                      "id": "f3465fb9-cdf7-480d-adc4-a1b7db903ecf",
                      "status": "new",
                      "created_at": "2022-12-23T11:50:25.771090",
                      "size": 16777216,
                      "description": "image of vds disk",
                      "disk_id": 897737,
                      "location": "ru-1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images\""
          }
        ]
      },
      "post": {
        "tags": [
          "Образы"
        ],
        "summary": "Создание образа",
        "description": "Чтобы создать образ, отправьте POST запрос в `/api/v1/images`, задав необходимые атрибуты. Образ будет создан с использованием предоставленной информации. \n\n Тело ответа будет содержать объект JSON с информацией о созданном образе.\n\n",
        "operationId": "Создание_образа_api_v1__account__images_post",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageInAPI"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Образ создан",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ImageOutResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "23b5fdab-9e4f-4e1a-8849-5bdca84bcc65",
                  "image": {
                    "id": "02c9f3da-3dfb-496b-ad14-9ba1a5798fd3",
                    "status": "new",
                    "created_at": "2022-12-23T11:50:25.770733",
                    "size": 4194304,
                    "description": "image of vds disk",
                    "disk_id": 556035,
                    "location": "ru-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"description\": \"\\u041c\\u043e\\u0439 \\u043e\\u0431\\u0440\\u0430\\u0437 \\u0434\\u043b\\u044f \\u0434\\u0438\\u0441\\u043a\\u0430 123\", \"disk_id\": 123}' \\\n -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images\""
          }
        ]
      }
    },
    "/api/v1/images/{image_id}": {
      "get": {
        "tags": [
          "Образы"
        ],
        "summary": "Получение информации о образе",
        "description": "Чтобы получить образ, отправьте запрос GET в `/api/v1/images/{image_id}`.",
        "operationId": "Получение_информации_о_образе_api_v1__account__images__image_id__get",
        "parameters": [
          {
            "description": "Идентификатор образа",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "string",
              "description": "Идентификатор образа"
            },
            "name": "image_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о образе",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ImageOutResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "d566c939-07c5-4378-9b64-d7e0b5c551f9",
                  "image": {
                    "id": "ac0b516e-b8de-404f-8f33-f87bf7c0edd8",
                    "status": "new",
                    "created_at": "2022-12-23T11:50:25.771224",
                    "size": 4194304,
                    "description": "image of vds disk",
                    "disk_id": 477640,
                    "location": "ru-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images/0a051e05-8737-4304-81e0-dc36a0162f57\""
          }
        ]
      },
      "delete": {
        "tags": [
          "Образы"
        ],
        "summary": "Удаление образа",
        "description": "Чтобы удалить образ, отправьте запрос DELETE в `/api/v1/images/{image_id}`.\n",
        "operationId": "Удаление_образа_api_v1__account__images__image_id__delete",
        "parameters": [
          {
            "description": "Идентификатор образа",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "string",
              "description": "Идентификатор образа"
            },
            "name": "image_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Образ удален"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images/89707c2b-c433-4a9a-975d-bef2eeb42550\""
          }
        ]
      },
      "patch": {
        "tags": [
          "Образы"
        ],
        "summary": "Обновление информации о образе",
        "operationId": "Обновление_информации_о_образе_api_v1__account__images__image_id__patch",
        "description": "Чтобы обновить только определенные атрибуты образа, отправьте запрос PATCH в `/api/v1/images/{image_id}`.",
        "parameters": [
          {
            "description": "Идентификатор образа",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "string",
              "description": "Идентификатор образа"
            },
            "name": "image_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageUpdateAPI"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Образ обновлен",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ImageOutResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "130b11a7-8c39-40f9-a9ba-c391cb4b0e71",
                  "image": {
                    "id": "4fd6169a-daaf-44be-bc40-f6aaad431253",
                    "status": "new",
                    "created_at": "2022-12-23T11:50:25.771370",
                    "size": 8388608,
                    "description": "image of vds disk",
                    "disk_id": 350011,
                    "location": "ru-1"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"description\": \"\\u041e\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435 \\u043e\\u0431\\u0440\\u0430\\u0437\\u0430\"}' \\\n -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images/315b4c85-f93d-49cb-b531-c261950ba51e\""
          }
        ]
      }
    },
    "/api/v1/images/{image_id}/download-url": {
      "get": {
        "tags": [
          "Образы"
        ],
        "summary": "Получение информации о ссылках на скачивание образов",
        "description": "Чтобы получить информацию о ссылках на скачивание образов, отправьте запрос GET в `/api/v1/images/{image_id}/download-url`.",
        "operationId": "Получение_информации_о_ссылках_на_скачивание_образов_api_v1__account__images__image_id__download-url_get",
        "parameters": [
          {
            "description": "Идентификатор образа",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "string",
              "description": "Идентификатор образа"
            },
            "name": "image_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ссылке на загрузку",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ImageDownloadsResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "3f2e0f35-8f2b-4187-965d-417e43c933bc",
                  "meta": {
                    "total": 1
                  },
                  "downloads": [
                    {
                      "id": "c85e28d5-2129-46c4-86e1-1527c4b81207",
                      "created_at": "2022-12-23T11:50:25.771917",
                      "image": "27300e3f-b196-451a-8cc5-1a02f4f8c9b3",
                      "type": "timeweb",
                      "url": "https://example.com/c85e28d5-2129-46c4-86e1-1527c4b81207"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images/e640dcad-ec0e-4aa5-ab38-400047edc170/download-url\""
          }
        ]
      },
      "post": {
        "tags": [
          "Образы"
        ],
        "summary": "Создание ссылки на скачивание образа",
        "description": "Чтобы создать ссылку на скачивание образа, отправьте запрос POST в `/api/v1/images/{image_id}/download-url`.",
        "operationId": "Создание_ссылки_на_скачивание_образа_api_v1__account__images__image_id__download-url_post",
        "parameters": [
          {
            "description": "Идентификатор образа",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "string",
              "description": "Идентификатор образа"
            },
            "name": "image_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/URLType"
            },
            "name": "url_type",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Ссылка успешно создана",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ImageDownloadResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "dfb23486-7bab-48b9-bbf4-f93785d8aa2b",
                  "download": {
                    "id": "f0cc8642-f806-4997-920c-169929703849",
                    "created_at": "2022-12-23T11:50:25.771527",
                    "image": "401c07f6-5b2f-4dec-801b-f7b7a0a6b39f",
                    "type": "timeweb",
                    "url": "https://example.com/f0cc8642-f806-4997-920c-169929703849"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images/96a79796-3c91-4b01-adbf-a218a12a60a0/download-url\""
          }
        ]
      }
    },
    "/api/v1/images/{image_id}/download-url/{image_url_id}": {
      "get": {
        "tags": [
          "Образы"
        ],
        "summary": "Получение информации о ссылке на скачивание образа",
        "description": "Чтобы получить информацию о ссылке на скачивание образа, отправьте запрос GET в `/api/v1/images/{image_id}/download-url/{image_url_id}`.",
        "operationId": "Получение_информации_о_ссылке_на_скачивание_образа_api_v1__account__images__image_id__download-url__image_url_id__get",
        "parameters": [
          {
            "description": "Идентификатор образа",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "string",
              "description": "Идентификатор образа"
            },
            "name": "image_id",
            "in": "path"
          },
          {
            "description": "Идентификатор ссылки",
            "required": true,
            "schema": {
              "title": "Image Url Id",
              "type": "string",
              "description": "Идентификатор ссылки"
            },
            "name": "image_url_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ссылке на загрузку",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ImageDownloadResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "428864cd-0b0d-4d10-b316-e8b244c8a878",
                  "download": {
                    "id": "2be0b49d-c443-4f9b-b0ba-5f5f7a2c790c",
                    "created_at": "2022-12-23T11:50:25.771758",
                    "image": "106058ee-167a-48dc-881c-d514b10e1a36",
                    "type": "timeweb",
                    "url": "https://example.com/2be0b49d-c443-4f9b-b0ba-5f5f7a2c790c"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images/d7b892c7-af89-4263-95cc-51154c719b8d/download-url/02349aa5-0294-4e57-9a7a-81a2b8f012a4\""
          }
        ]
      },
      "delete": {
        "tags": [
          "Образы"
        ],
        "summary": "Удаление ссылки на образ",
        "description": "Чтобы удалить ссылку на образ, отправьте DELETE запрос в `/api/v1/images/{image_id}/download-url/{image_url_id}`.",
        "operationId": "Удаление_ссылки_на_образ_api_v1__account__images__image_id__download-url__image_url_id__delete",
        "parameters": [
          {
            "description": "Идентификатор образа",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "string",
              "description": "Идентификатор образа"
            },
            "name": "image_id",
            "in": "path"
          },
          {
            "description": "Идентификатор ссылки",
            "required": true,
            "schema": {
              "title": "Image Url Id",
              "type": "string",
              "description": "Идентификатор ссылки"
            },
            "name": "image_url_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Ссылка удалена"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/images/1b87aeb5-adb0-4e1e-9b5d-eb563f7ee9b3/download-url/fa2394ea-d95a-45d5-8bca-a0ba1d699f9f\""
          }
        ]
      }
    },
    "/api/v1/balancers": {
      "get": {
        "summary": "Получение списка всех бaлансировщиков",
        "description": "Чтобы получить список всех бaлансировщиков на вашем аккаунте, отправьте GET запрос на `/api/v1/balancers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `balancers`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `balancers`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "balancers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/balancer"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "balancers"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      },
      "post": {
        "summary": "Создание бaлансировщика",
        "description": "Чтобы создать бaлансировщик на вашем аккаунте, отправьте POST запрос на `/api/v1/balancers` задав необходимые атрибуты.\n\nБалансировщик будет создан с использованием предоставленной информации. Тело ответа будет содержать объект JSON с информацией о созданном балансировщике.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancer\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-balancer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `balancer`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "balancer": {
                          "$ref": "#/components/schemas/balancer"
                        }
                      },
                      "required": [
                        "balancer"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      }
    },
    "/api/v1/balancers/{balancer_id}": {
      "get": {
        "summary": "Получение бaлансировщика",
        "description": "Чтобы отобразить информацию об отдельном балансировщике, отправьте запрос GET на `api/v1/balancers/{balancer_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON с ключом `balancer`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "balancer": {
                          "$ref": "#/components/schemas/balancer"
                        }
                      },
                      "required": [
                        "balancer"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      },
      "patch": {
        "summary": "Обновление балансировщика",
        "description": "Чтобы обновить только определенные атрибуты балансировщика, отправьте запрос PATCH в `api/v1/balancers/{balancer_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update-balancer"
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '${DATA}' \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON с ключом `balancer`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "balancer": {
                          "$ref": "#/components/schemas/balancer"
                        }
                      },
                      "required": [
                        "balancer"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      },
      "delete": {
        "summary": "Удаление балансировщика",
        "description": "Чтобы удалить балансировщик, отправьте запрос DELETE в `api/v1/balancers/{balancer_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051\""
          }
        ],
        "responses": {
          "204": {
            "description": "Балансировщик успешно удален."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      }
    },
    "/api/v1/balancers/{balancer_id}/ips": {
      "get": {
        "summary": "Получение списка ip адресов балансировщика",
        "description": "Чтобы добавить `ip` адреса к балансировщику, отправьте запрос GET в `api/v1/balancers/{balancer_id}/ips`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051/ips\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `ips`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "ips": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "ips"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      },
      "post": {
        "summary": "Добавление ip адресов к балансировщику",
        "description": "Чтобы добавить `ip` адреса к балансировщику, отправьте запрос POST в `api/v1/balancers/{balancer_id}/ips`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051/ips\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ips": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "192.168.0.0"
                    }
                  }
                },
                "required": [
                  "ips"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "`Ip` адреса добавлены к балансировщику"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      },
      "delete": {
        "summary": "Удаление ip адресов из балансировщика",
        "description": "Чтобы удалить `ip` адреса из балансировщика, отправьте запрос DELETE в `api/v1/balancers/{balancer_id}/ips`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051/ips\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ips": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "192.168.0.0"
                    }
                  }
                },
                "required": [
                  "ips"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "`Ip` адрес удален из балансировщика"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      }
    },
    "/api/v1/balancers/{balancer_id}/rules": {
      "get": {
        "summary": "Получение правил балансировщика",
        "description": "Получить правила балансировщика балансировщика, отправьте запрос GET в `api/v1/balancers/{balancer_id}/rules`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051/rules\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `rules`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "rules": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/rule"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "rules"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      },
      "post": {
        "summary": "Создание правила для балансировщика",
        "description": "Чтобы создать правило для балансировщика, отправьте запрос POST в `api/v1/balancers/{balancer_id}/rules`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051/rules\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-rule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `rule`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "rule": {
                          "$ref": "#/components/schemas/rule"
                        }
                      },
                      "required": [
                        "rule"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      }
    },
    "/api/v1/balancers/{balancer_id}/rules/{rule_id}": {
      "patch": {
        "summary": "Обновление правила для балансировщика",
        "description": "Чтобы обновить правило для балансировщика, отправьте запрос PATCH в `api/v1/balancers/{balancer_id}/rules/{rule_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          },
          {
            "$ref": "#/components/parameters/rule-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051/rules/123\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update-rule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `rule`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "rule": {
                          "$ref": "#/components/schemas/rule"
                        }
                      },
                      "required": [
                        "rule"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      },
      "delete": {
        "summary": "Удаление правила для балансировщика",
        "description": "Чтобы удалить правило для балансировщика, отправьте запрос DELETE в `api/v1/balancers/{balancer_id}/rules/{rule_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/balancer-id"
          },
          {
            "$ref": "#/components/parameters/rule-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/balancers/1051/rules/123\""
          }
        ],
        "responses": {
          "204": {
            "description": "Правило удалено из балансировщика"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      }
    },
    "/api/v1/presets/balancers": {
      "get": {
        "summary": "Получение списка тарифов для балансировщика",
        "description": "Чтобы получить список тарифов для балансировщика, отправьте GET запрос на `/api/v1/presets/balancers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `balancers_presets`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/presets/balancers\""
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "balancers_presets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/presets-balancer"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "balancers_presets"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            },
            "description": "Тарифы успешно получены"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Балансировщики"
        ]
      }
    },
    "/api/v1/dbs": {
      "get": {
        "summary": "Получение списка всех баз данных",
        "description": "Чтобы получить список всех баз данных на вашем аккаунте, отправьте GET запрос на `/api/v1/dbs`.\n\n Тело ответа будет представлять собой объект JSON с ключом `dbs`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dbs\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `dbs`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "dbs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/db"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "dbs"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      },
      "post": {
        "summary": "Создание базы данных",
        "description": "Чтобы создать базу данных на вашем аккаунте, отправьте POST запрос на `/api/v1/dbs` задав необходимые атрибуты.\n\nБаза данных будет создана с использованием предоставленной информации. Тело ответа будет содержать объект JSON с информацией о созданной базе данных.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/db\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-db"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Ответ будет представлять собой объект JSON c ключом `db`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "db": {
                          "$ref": "#/components/schemas/db"
                        }
                      },
                      "required": [
                        "db"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      }
    },
    "/api/v1/dbs/{db_id}": {
      "get": {
        "summary": "Получение базы данных",
        "description": "Чтобы отобразить информацию об отдельной базе данных, отправьте запрос GET на `api/v1/dbs/{db_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dbs-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dbs/1051\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON с ключом `db`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "db": {
                          "$ref": "#/components/schemas/db"
                        }
                      },
                      "required": [
                        "db"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      },
      "patch": {
        "summary": "Обновление базы данных",
        "description": "Чтобы обновить только определенные атрибуты базы данных, отправьте запрос PATCH в `api/v1/dbs/{db_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dbs-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update-db"
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '${DATA}' \\\n  \"https://api.timeweb.cloud/api/v1/dbs/1051\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON с ключом `db`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "db": {
                          "$ref": "#/components/schemas/db"
                        }
                      },
                      "required": [
                        "db"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      },
      "delete": {
        "summary": "Удаление базы данных",
        "description": "Чтобы удалить базу данных, отправьте запрос DELETE в `api/v1/dbs/{db_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dbs-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dbs/1051\""
          }
        ],
        "responses": {
          "204": {
            "description": "База данных успешно удалена."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      }
    },
    "/api/v1/dbs/{db_id}/backups": {
      "get": {
        "summary": "Список бэкапов базы данных",
        "description": "Чтобы получить список бэкапов базы данных, отправьте запрос GET в `api/v1/dbs/{db_id}/backups`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dbs-id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dbs/1051/backups\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON с ключом `backups`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "backups": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/backup"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "backups"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      },
      "post": {
        "summary": "Создание бэкапа базы данных",
        "description": "Чтобы создать бэкап базы данных, отправьте запрос POST в `api/v1/dbs/{db_id}/backups`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dbs-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dbs/1051/backups\""
          }
        ],
        "responses": {
          "201": {
            "description": "Ответ будет представлять собой объект JSON с ключом `backup`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "backup": {
                          "$ref": "#/components/schemas/backup"
                        }
                      },
                      "required": [
                        "backup"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      }
    },
    "/api/v1/dbs/{db_id}/backups/{backup_id}": {
      "delete": {
        "summary": "Удаление бэкапа базы данных",
        "description": "Чтобы удалить бэкап базы данных, отправьте запрос DELETE в `api/v1/dbs/{db_id}/backups/{backup_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dbs-id"
          },
          {
            "$ref": "#/components/parameters/backup-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dbs/1051/backups/123\""
          }
        ],
        "responses": {
          "204": {
            "description": "Бэкап успешно удален."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      },
      "get": {
        "summary": "Получение бэкапа базы данных",
        "description": "Чтобы получить бэкап базы данных, отправьте запрос GET в `api/v1/dbs/{db_id}/backups/{backup_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dbs-id"
          },
          {
            "$ref": "#/components/parameters/backup-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dbs/1051/backups/123\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON с ключом `backup`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "backup": {
                          "$ref": "#/components/schemas/backup"
                        }
                      },
                      "required": [
                        "backup"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      },
      "put": {
        "summary": "Восстановление базы данных из бэкапа",
        "description": "Чтобы восстановить базу данных из бэкапа, отправьте запрос PUT в `api/v1/dbs/{db_id}/backups/{backup_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dbs-id"
          },
          {
            "$ref": "#/components/parameters/backup-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PUT \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dbs/1051/backups/123\""
          }
        ],
        "responses": {
          "204": {
            "description": "База данных из бэкапа успешно восстановлена."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      }
    },
    "/api/v1/presets/dbs": {
      "get": {
        "summary": "Получение списка тарифов для баз данных",
        "description": "Чтобы получить список тарифов для баз данных, отправьте GET запрос на `/api/v1/presets/dbs`.\n\n Тело ответа будет представлять собой объект JSON с ключом `databases_presets`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/presets/dbs\""
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "databases_presets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/presets-dbs"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "databases_presets"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            },
            "description": "Тарифы успешно получены."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Базы данных"
        ]
      }
    },
    "/api/v1/dedicated-servers": {
      "get": {
        "summary": "Получение списка выделенных серверов",
        "description": "Чтобы получить список всех выделенных серверов на вашем аккаунте, отправьте GET запрос на `/api/v1/dedicated-servers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `dedicated_servers`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dedicated-servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `dedicated_servers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "dedicated_servers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/dedicated-server"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "dedicated_servers"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Выделенные серверы"
        ]
      },
      "post": {
        "summary": "Создание выделенного сервера",
        "description": "Чтобы создать выделенный сервер, отправьте POST запрос в `api/v1/dedicated-servers`, задав необходимые атрибуты.\n\nВыделенный сервер будет создан с использованием предоставленной информации. Тело ответа будет содержать объект JSON с информацией о созданном выделенном сервере.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-dedicated-server"
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"plan_id\":2377,\"preset_id\":81,\"payment_period\":\"P1M\",\"name\":\"Mysterious Dunnock\",\"comment\":\"Production Server\",\"location\":\"russia\",\"os_id\":188,\"cp_id\":199,\"bandwidth_id\":483,\"network_drive_id\":446,\"additional_ip_addr_id\":477}' \\\n  \"https://api.timeweb.cloud/api/v1/dedicated-servers\""
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "dedicated_server": {
                          "$ref": "#/components/schemas/dedicated-server"
                        }
                      },
                      "required": [
                        "dedicated_server"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Выделенные серверы"
        ]
      }
    },
    "/api/v1/dedicated-servers/{dedicated_id}": {
      "get": {
        "summary": "Получение выделенного сервера",
        "description": "Чтобы отобразить информацию об отдельном выделенном сервере, отправьте запрос GET на `api/v1/dedicated-servers/{dedicated_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dedicated-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dedicated-servers/1051\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON с ключом `dedicated_server`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "dedicated_server": {
                          "$ref": "#/components/schemas/dedicated-server"
                        }
                      },
                      "required": [
                        "dedicated_server"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Выделенные серверы"
        ]
      },
      "patch": {
        "summary": "Обновление выделенного сервера",
        "description": "Чтобы обновить только определенные атрибуты выделенного сервера, отправьте запрос PATCH в `api/v1/dedicated-servers/{dedicated_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dedicated-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Удобочитаемое имя выделенного сервера. Максимальная длина — 255 символов, имя должно быть уникальным.",
                    "example": "name"
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Комментарий к выделенному серверу. Максимальная длина — 255 символов.",
                    "example": "comment"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"name\":\"Cute Corvus \",\"comment\":\"Development Server\"}' \\\n  \"https://api.timeweb.cloud/api/v1/dedicated/1051\""
          }
        ],
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON с ключом `dedicated_server`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "dedicated_server": {
                          "$ref": "#/components/schemas/dedicated-server"
                        }
                      },
                      "required": [
                        "dedicated_server"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Выделенные серверы"
        ]
      },
      "delete": {
        "summary": "Удаление выделенного сервера",
        "description": "Чтобы удалить выделенный сервер, отправьте запрос DELETE в `api/v1/dedicated-servers/{dedicated_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/dedicated-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/dedicated/1051\""
          }
        ],
        "responses": {
          "204": {
            "description": "Выделенный сервер успешно удален"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Выделенные серверы"
        ]
      }
    },
    "/api/v1/presets/dedicated-servers": {
      "get": {
        "summary": "Получение списка тарифов для выделенного сервера",
        "description": "Чтобы получить список всех тарифов выделенных серверов, отправьте GET запрос на `/api/v1/presets/dedicated-servers`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/presets/dedicated-servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключем `dedicated_servers_presets`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "dedicated_servers_presets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/dedicated-server-preset"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "dedicated_servers_presets"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Выделенные серверы"
        ]
      }
    },
    "/api/v1/presets/{preset_id}/additional-services": {
      "get": {
        "summary": "Получение дополнительных услуг для выделенного сервера",
        "description": "Чтобы получить список всех дополнительных услуг для выделенных серверов, отправьте GET запрос на `/api/v1/presets/{preset_id}/additional-services`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/preset-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/presets/3017/additional-services\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключем `dedicated_server_additional_services`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "dedicated_server_additional_services": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/dedicated-server-additional-service"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "dedicated_server_additional_services"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Выделенные серверы"
        ]
      }
    },
    "/api/v1/k8s/clusters": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение списка кластеров",
        "description": "Чтобы получить список кластеров, отправьте GET запрос на `/api/v1/k8s/clusters`.",
        "operationId": "Получение_списка_кластеров_api_v1__customer__clusters_get",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Список кластеров",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ClustersResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "1c3b6e2f-60e9-4184-a876-fe150ca1aac2",
                  "meta": {
                    "total": 1
                  },
                  "clusters": [
                    {
                      "id": 84999,
                      "name": "Кластер 84999",
                      "created_at": "2022-12-16T15:58:24.163564",
                      "status": "active",
                      "description": "Описание кластера",
                      "ha": false,
                      "k8s_version": "v1.22.16",
                      "network_driver": "canal",
                      "ingress": true,
                      "preset_id": 403,
                      "cpu": 1,
                      "ram": 10240,
                      "disk": 100
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters\""
          }
        ]
      },
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Создание кластера",
        "description": "Чтобы создать кластер, отправьте POST запрос на `/api/v1/k8s/clusters`.",
        "operationId": "Создание_кластера_api_v1__customer__clusters_post",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Информация о кластере",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ClusterResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "eb84a42b-6be7-4599-a298-0953f3aebd3b",
                  "cluster": {
                    "id": 58046,
                    "name": "Кластер 58046",
                    "created_at": "2022-12-16T15:58:24.173093",
                    "status": "active",
                    "description": "Описание кластера",
                    "ha": false,
                    "k8s_version": "v1.22.16",
                    "network_driver": "canal",
                    "ingress": false,
                    "preset_id": 403,
                    "cpu": 1,
                    "ram": 10240,
                    "disk": 100
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n -d '{\n  \"name\": \"Fervent Pascal\",\n  \"ha\": false,\n  \"k8s_version\": \"v1.22.16\",\n  \"network_driver\": \"canal\",\n  \"ingress\": false,\n  \"preset_id\": 403,\n  \"worker_groups\": {\n    \"name\": \"new group\", \n    \"preset_id\": 399, \n    \"node_count\": 1\n  }\n}'  \"https://api.timeweb.cloud/api/v1/k8s/clusters\""
          }
        ]
      }
    },
    "/api/v1/k8s/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение информации о кластере",
        "description": "Чтобы получить информацию о кластере, отправьте GET запрос в `/api/v1/k8s/clusters/{cluster_id}`",
        "operationId": "Получение_информации_о_кластере_api_v1__customer__clusters__cluster_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о кластере",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ClusterResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "14e88af6-9a50-4266-bc20-4fa21fff6f8d",
                  "cluster": {
                    "id": 57399,
                    "name": "Кластер 57399",
                    "created_at": "2022-12-16T15:58:24.168762",
                    "status": "active",
                    "description": "Описание кластера",
                    "ha": false,
                    "k8s_version": "v1.22.16",
                    "network_driver": "canal",
                    "ingress": true,
                    "preset_id": 403,
                    "cpu": 1,
                    "ram": 10240,
                    "disk": 100
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/51\""
          }
        ]
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Удаление кластера",
        "description": "Чтобы удалить кластер, отправьте DELETE запрос в `/api/v1/k8s/clusters/{cluster_id}`",
        "operationId": "Удаление_кластера_api_v1__customer__clusters__cluster_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Кластер удален"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/75\""
          }
        ]
      },
      "patch": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Обновление информации о кластере",
        "description": "Чтобы обновить информацию о кластере, отправьте PATCH запрос в `/api/v1/k8s/clusters/{cluster_id}`",
        "operationId": "Обновление_информации_о_кластере_api_v1__customer__clusters__cluster_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Информация о кластере",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ClusterResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "61a695a7-eeeb-42d1-a338-8ee2037ccbd0",
                  "cluster": {
                    "id": 19911,
                    "name": "Кластер 19911",
                    "created_at": "2022-12-16T15:58:24.177111",
                    "status": "active",
                    "description": "Описание кластера",
                    "ha": false,
                    "k8s_version": "v1.22.16",
                    "network_driver": "canal",
                    "ingress": true,
                    "preset_id": 403,
                    "cpu": 1,
                    "ram": 10240,
                    "disk": 100
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/45\""
          }
        ]
      }
    },
    "/api/v1/k8s/clusters/{cluster_id}/resources": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение ресурсов кластера",
        "description": "Чтобы получить ресурсы кластера, отправьте GET запрос в `/api/v1/k8s/clusters/{cluster_id}/resources`.",
        "operationId": "Получение_ресурсов_кластера_api_v1__customer__clusters__cluster_id__resources_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Список ресурсов",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResourcesResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "fc0f0f23-4852-4204-8282-c51151570acd",
                  "resources": {
                    "nodes": 10,
                    "cores": {
                      "requested": 10,
                      "allocatable": 10,
                      "capacity": 10,
                      "used": 5.5
                    },
                    "memory": {
                      "requested": 10240,
                      "allocatable": 9216,
                      "capacity": 9216,
                      "used": 5632
                    },
                    "pods": {
                      "requested": 10,
                      "allocatable": 10,
                      "capacity": 10,
                      "used": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/78/resources\""
          }
        ]
      }
    },
    "/api/v1/k8s/clusters/{cluster_id}/kubeconfig": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение файла kubeconfig",
        "description": "Чтобы получить файл kubeconfig, отправьте GET запрос в `/api/v1/k8s/clusters/{cluster_id}/kubeconfig`.",
        "operationId": "Получение_файла_kubeconfig_api_v1__customer__clusters__cluster_id__kubeconfig_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "type": "integer",
              "description": "Уникальный идентификатор кластера"
            },
            "name": "cluster_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Загрузка конфигурации подключения к кластеру",
            "content": {
              "application/yaml": {
                "schema": {
                  "title": "Response 200 Получение Файла Kubeconfig Api V1  Customer  Clusters  Cluster Id  Kubeconfig Get",
                  "type": "string"
                },
                "example": {
                  "apiVersion": "v1",
                  "kind": "Config",
                  "clusters": [
                    {
                      "name": "examply-example",
                      "cluster": {
                        "server": "https://k8saas.timeweb.com/k8s/clusters/c-12345"
                      }
                    }
                  ],
                  "users": [
                    {
                      "name": "examply-example",
                      "user": {
                        "token": "kubeconfig-user-example:exampleexampleexample"
                      }
                    }
                  ],
                  "contexts": [
                    {
                      "name": "example-example",
                      "context": {
                        "user": "example-example",
                        "cluster": "example-example"
                      }
                    }
                  ],
                  "current-context": "example-example"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/58/kubeconfig\""
          }
        ]
      }
    },
    "/api/v1/k8s/clusters/{cluster_id}/groups": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение групп нод кластера",
        "description": "Чтобы получить группы нод кластера, отправьте GET запрос в `/api/v1/k8s/clusters/{cluster_id}/groups`.",
        "operationId": "Получение_групп_нод_кластера_api_v1__customer__clusters__cluster_id__groups_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "type": "integer",
              "description": "Уникальный идентификатор кластера"
            },
            "name": "cluster_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Список групп нод",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NodeGroupsResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "38b68fad-3b68-4a2a-8850-d03c80dd1856",
                  "meta": {
                    "total": 3
                  },
                  "node_groups": [
                    {
                      "id": 5182,
                      "name": "Группа нод 5182",
                      "created_at": "2022-12-16T15:58:24.180532",
                      "preset_id": 399,
                      "node_count": 2
                    },
                    {
                      "id": 8322,
                      "name": "Группа нод 8322",
                      "created_at": "2022-12-16T15:58:24.180570",
                      "preset_id": 399,
                      "node_count": 8
                    },
                    {
                      "id": 4134,
                      "name": "Группа нод 4134",
                      "created_at": "2022-12-16T15:58:24.180590",
                      "preset_id": 399,
                      "node_count": 9
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/94/groups\""
          }
        ]
      },
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Создание группы нод",
        "description": "Чтобы создать группу нод кластера, отправьте POST запрос в `/api/v1/k8s/clusters/{cluster_id}/groups`.",
        "operationId": "Создание_группы_нод_api_v1__customer__clusters__cluster_id__groups_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeGroupIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Информация о группе нод",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NodeGroupResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "7e68a265-d89b-4878-9c8f-1dabdf66654a",
                  "node_group": {
                    "id": 3916,
                    "name": "Группа нод 3916",
                    "created_at": "2022-12-16T15:58:24.180749",
                    "preset_id": 399,
                    "node_count": 10
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\n  \"name\": \"group name\",\n  \"preset_id\": 399, \n  \"node_count\": 1\n}'  \"https://api.timeweb.cloud/api/v1/k8s/clusters/7/groups\""
          }
        ]
      }
    },
    "/api/v1/k8s/clusters/{cluster_id}/groups/{group_id}": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение информации о группе нод",
        "description": "Чтобы получить информацию о группе нод, отправьте GET запрос в `/api/v1/k8s/clusters/{cluster_id}/groups/{group_id}`.",
        "operationId": "Получение_информации_о_группе_нод_api_v1__customer__clusters__cluster_id__groups__group_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Group Id",
              "description": "Уникальный идентификатор группы нод",
              "type": "integer"
            },
            "name": "group_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о группе нод",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NodeGroupResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "18f96c69-ab4d-4fd7-b136-a91aed29d272",
                  "node_group": {
                    "id": 1120,
                    "name": "Группа нод 1120",
                    "created_at": "2022-12-16T15:58:24.180689",
                    "preset_id": 399,
                    "node_count": 2
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/74/groups/14\""
          }
        ]
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Удаление группы нод",
        "description": "Чтобы удалить группу нод, отправьте DELETE запрос в `/api/v1/k8s/clusters/{cluster_id}/groups/{group_id}`.",
        "operationId": "Удаление_группы_нод_api_v1__customer__clusters__cluster_id__groups__group_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Group Id",
              "description": "Уникальный идентификатор группы нод",
              "type": "integer"
            },
            "name": "group_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Группа нод удалена"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/9/groups/55\""
          }
        ]
      }
    },
    "/api/v1/k8s/clusters/{cluster_id}/groups/{group_id}/nodes": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение списка нод принадлежащих группе",
        "description": "Чтобы получить список нод принадлежащих группе, отправьте GET запрос в `/api/v1/k8s/clusters/{cluster_id}/groups/{group_id}/nodes`.",
        "operationId": "Получение_списка_нод_принадлежащих_группе_api_v1__customer__clusters__cluster_id__groups__group_id__nodes_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Group Id",
              "description": "Уникальный идентификатор группы нод",
              "type": "integer"
            },
            "name": "group_id",
            "in": "path"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Список нод",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NodesResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "2e10c938-7b49-47fe-b9b3-c841327df580",
                  "meta": {
                    "total": 3
                  },
                  "nodes": [
                    {
                      "id": 9732,
                      "created_at": "2022-12-16T15:58:24.180802",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    },
                    {
                      "id": 3234,
                      "created_at": "2022-12-16T15:58:24.180847",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    },
                    {
                      "id": 3588,
                      "created_at": "2022-12-16T15:58:24.180874",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/44/groups/11/nodes\""
          }
        ]
      },
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Увеличение количество нод в группе на указанное значение",
        "description": "Чтобы увеличить количество нод в группе на указанное значение, отправьте POST запрос на `/api/v1/k8s/clusters/{cluster_id}/groups/{group_id}/nodes`.",
        "operationId": "Увеличение_количество_нод_в_группе_на_указанное_количество_api_v1__customer__clusters__cluster_id__groups__group_id__nodes_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Group Id",
              "description": "Уникальный идентификатор группы нод",
              "type": "integer"
            },
            "name": "group_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeCount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Список нод",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NodesResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "14c8922e-457d-4a08-91cf-7043f51deaa4",
                  "meta": {
                    "total": 3
                  },
                  "nodes": [
                    {
                      "id": 679,
                      "created_at": "2022-12-16T15:58:24.181028",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    },
                    {
                      "id": 5291,
                      "created_at": "2022-12-16T15:58:24.181056",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    },
                    {
                      "id": 4185,
                      "created_at": "2022-12-16T15:58:24.181082",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n -d '{\n  \"count\": 2\n}' \"https://api.timeweb.cloud/api/v1/k8s/clusters/74/groups/99/nodes\""
          }
        ]
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Уменьшение количества нод в группе на указанное количество",
        "description": "Чтобы уменьшить количество нод в группе на указанное значение, отправьте DELETE запрос в `/api/v1/k8s/clusters/{cluster_id}/groups/{group_id}/nodes`.",
        "operationId": "Уменьшение_количества_нод_в_группе_на_указанное_количество_api_v1__customer__clusters__cluster_id__groups__group_id__nodes_delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Group Id",
              "description": "Уникальный идентификатор группы нод",
              "type": "integer"
            },
            "name": "group_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeCount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Количество нод уменьшено"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/34/groups/16/nodes\""
          }
        ]
      }
    },
    "/api/v1/k8s/clusters/{cluster_id}/nodes": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение списка нод",
        "description": "Чтобы получить список нод, отправьте GET запрос в `/api/v1/k8s/clusters/{cluster_id}/nodes`.",
        "operationId": "Получение_списка_нод_api_v1__customer__clusters__cluster_id__nodes_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Список нод",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NodesResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                },
                "example": {
                  "response_id": "2e10c938-7b49-47fe-b9b3-c841327df580",
                  "meta": {
                    "total": 3
                  },
                  "nodes": [
                    {
                      "id": 9732,
                      "created_at": "2022-12-16T15:58:24.180802",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    },
                    {
                      "id": 3234,
                      "created_at": "2022-12-16T15:58:24.180847",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    },
                    {
                      "id": 3588,
                      "created_at": "2022-12-16T15:58:24.180874",
                      "type": "worker",
                      "group_id": 1,
                      "status": "active",
                      "preset_id": 399,
                      "cpu": 1,
                      "ram": 1024,
                      "disk": 10,
                      "network": 200
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/34/nodes\""
          }
        ]
      }
    },
    "/api/v1/k8s/clusters/{cluster_id}/nodes/{node_id}": {
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Удаление ноды",
        "description": "Чтобы удалить ноду, отправьте DELETE запрос в `/api/v1/k8s/clusters/{cluster_id}/nodes/{node_id}`.",
        "operationId": "Удаление_ноды_api_v1__customer__clusters__cluster_id__nodes__node_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Cluster Id",
              "description": "Уникальный идентификатор кластера",
              "type": "integer"
            },
            "name": "cluster_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Node Id",
              "description": "Уникальный идентификатор ноды",
              "type": "integer"
            },
            "name": "node_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Нода удалена"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s/clusters/17/nodes/3\""
          }
        ]
      }
    },
    "/api/v1/k8s/k8s_versions": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение списка версий k8s",
        "description": "Чтобы получить список версий k8s, отправьте GET запрос в `/api/v1/k8s/k8s_versions`.",
        "operationId": "Получение_списка_версий_k8s_api_v1_k8s_versions_get",
        "responses": {
          "200": {
            "description": "Список версий k8s",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/K8SVersionsResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/k8s_versions\""
          }
        ]
      }
    },
    "/api/v1/k8s/network_drivers": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение списка сетевых драйверов k8s",
        "description": "Чтобы получить список сетевых драйверов k8s, отправьте GET запрос в `/api/v1/k8s/network_drivers`.",
        "operationId": "Получение_списка_сетевых_драйверов_k8s_api_v1_network_drivers_get",
        "responses": {
          "200": {
            "description": "Список сетевых драйверов k8s",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NetworkDriversResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/network_drivers\""
          }
        ]
      }
    },
    "/api/v1/presets/k8s": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Получение списка тарифов",
        "description": "Чтобы получить список тарифов, отправьте GET запрос в `/api/v1/presets/k8s`.",
        "operationId": "Получение_списка_тарифов_api_v1_presets_get",
        "responses": {
          "200": {
            "description": "Список тарифов",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PresetsResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/presets\""
          }
        ]
      }
    },
    "/api/v1/servers": {
      "get": {
        "summary": "Получение списка серверов",
        "description": "Чтобы получить серверов, отправьте GET запрос на `/api/v1/servers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `servers`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `servers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "servers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/vds"
                          }
                        }
                      },
                      "required": [
                        "servers",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      },
      "post": {
        "summary": "Создание сервера",
        "description": "Чтобы создать сервер, отправьте POST запрос в `api/v1/servers`, задав необходимые атрибуты. Обязательно должен присутствовать один из параметров `configuration` или `preset_id`.\n\nCервер будет создан с использованием предоставленной информации. Тело ответа будет содержать объект JSON с информацией о созданном сервере.\n\n",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\n  \"is_ddos_guard\": false,\n  \"os_id\": 65,\n  \"bandwidth\": 200,\n  \"comment\": \"comment\",\n  \"name\": \"name\",\n  \"preset_id\": 122,\n  \"is_local_network\": false\n}' \"https://api.timeweb.cloud/api/v1/servers\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-server"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `server`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "server": {
                          "$ref": "#/components/schemas/vds"
                        }
                      },
                      "required": [
                        "server"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/servers/{server_id}": {
      "get": {
        "summary": "Получение сервера",
        "description": "Чтобы получить сервер, отправьте запрос GET в `/api/v1/servers/{server_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n \"https://api.timeweb.cloud/api/v1/servers/{server_id}\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `server`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "server": {
                          "$ref": "#/components/schemas/vds"
                        }
                      },
                      "required": [
                        "server"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      },
      "delete": {
        "summary": "Удаление сервера",
        "description": "Чтобы удалить сервер, отправьте запрос DELETE в `/api/v1/servers/{server_id}`.\\\n Обратите внимание, если на аккаунте включено удаление серверов по смс, то вернется ошибка 423.",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/servers/{server_id}\""
          }
        ],
        "responses": {
          "204": {
            "description": "Успешное удаление сервера"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      },
      "patch": {
        "summary": "Изменение сервера",
        "description": "Чтобы обновить только определенные атрибуты сервера, отправьте запрос PATCH в `/api/v1/servers/{server_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\n  \"os_id\": 65,\n  \"bandwidth\": 200,\n  \"comment\": \"comment\",\n  \"name\": \"name\",\n  \"preset_id\": 122,\n}' \"https://api.timeweb.cloud/api/v1/servers/{server_id}\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update-server"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `server`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "server": {
                          "$ref": "#/components/schemas/vds"
                        }
                      },
                      "required": [
                        "server"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/servers/{server_id}/action": {
      "post": {
        "summary": "Выполнение действия над сервером",
        "description": "Чтобы выполнить действие над сервером, отправьте POST запрос на `/api/v1/servers/{server_id}/action`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\n  \"action\": \"shutdown\",\n}' \"https://api.timeweb.cloud/api/v1/servers/{server_id}/action\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Действие над сервером",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "hard_reboot",
                      "hard_shutdown",
                      "install",
                      "reboot",
                      "remove",
                      "reset_password",
                      "shutdown",
                      "start",
                      "clone"
                    ]
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Успешное выполнение действия"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/os/servers": {
      "get": {
        "summary": "Получение списка операционных систем",
        "description": "Чтобы получить список всех операционных систем, отправьте GET запрос на `/api/v1/os/servers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `servers_os`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/os/servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `servers_os`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "servers_os": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/servers-os"
                          }
                        }
                      },
                      "required": [
                        "servers_os",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/presets/servers": {
      "get": {
        "summary": "Получение списка тарифов серверов",
        "description": "Чтобы получить список всех тарифов серверов, отправьте GET запрос на `/api/v1/presets/servers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `server_presets`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/presets/servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `server_presets",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "server_presets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/servers-preset"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "server_presets"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/configurator/servers": {
      "get": {
        "summary": "Получение списка конфигураторов серверов",
        "description": "Чтобы получить список всех конфигураторов серверов, отправьте GET запрос на `/api/v1/configurator/servers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `server_configurators`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/configurator/servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `server_configurators",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "server_configurators": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/servers-configurator"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "server_configurators"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/software/servers": {
      "get": {
        "summary": "Получение списка ПО из маркетплейса",
        "description": "Чтобы получить список ПО из маркетплейса, отправьте GET запрос на `/api/v1/software/servers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `servers_software`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/software/servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `servers_software`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "servers_software": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/servers-software"
                          }
                        }
                      },
                      "required": [
                        "servers_software",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/servers/{server_id}/disks/{disk_id}/backups": {
      "post": {
        "summary": "Создание бэкапа диска сервера",
        "description": "Чтобы создать бэкап диска сервера, отправьте POST запрос на `/api/v1/servers/{server_id}/disks/{disk_id}/backups`.\n\n Тело ответа будет представлять собой объект JSON с ключом `backup`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          },
          {
            "$ref": "#/components/parameters/disk-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n -d '{ \"comment\": \"comment\"}' \n \"https://api.timeweb.cloud/api/v1/servers/{server_id}/disks/{disk_id}/backups\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Комментарий к бэкапу.",
                    "example": "comment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `backup`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "backup": {
                          "$ref": "#/components/schemas/server-backup"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      },
      "get": {
        "summary": "Получение списка бэкапов диска сервера",
        "description": "Чтобы получить бэкапов диска сервера, отправьте GET запрос на `/api/v1/servers/{server_id}/disks/{disk_id}/backups`.\n\n Тело ответа будет представлять собой объект JSON с ключом `backups`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          },
          {
            "$ref": "#/components/parameters/disk-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/servers/{server_id}/disks/{disk_id}/backups\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `backups`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "backups": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/server-backup"
                          }
                        }
                      },
                      "required": [
                        "backups",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}": {
      "patch": {
        "summary": "Изменение бэкапа диска сервера",
        "description": "Чтобы изменить бэкап диска сервера, отправьте PATCH запрос на `/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          },
          {
            "$ref": "#/components/parameters/disk-id"
          },
          {
            "$ref": "#/components/parameters/server-backup-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" -d '{ \"comment\": \"comment\"}' \\\n  \"https://api.timeweb.cloud/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Комментарий к бэкапу.",
                    "example": "comment"
                  }
                },
                "required": [
                  "comment"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `backup`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "backup": {
                          "$ref": "#/components/schemas/server-backup"
                        }
                      },
                      "required": [
                        "backup"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      },
      "delete": {
        "summary": "Удаление бэкапа диска сервера",
        "description": "Чтобы удалить бэкап диска сервера, отправьте DELETE запрос на `/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          },
          {
            "$ref": "#/components/parameters/disk-id"
          },
          {
            "$ref": "#/components/parameters/server-backup-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}\""
          }
        ],
        "responses": {
          "204": {
            "description": "Успешное удаление бэкапа."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      },
      "get": {
        "summary": "Получение бэкапа диска сервера",
        "description": "Чтобы получить бэкап диска сервера, отправьте GET запрос на `/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}`.\n\n Тело ответа будет представлять собой объект JSON с ключом `backup`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          },
          {
            "$ref": "#/components/parameters/disk-id"
          },
          {
            "$ref": "#/components/parameters/server-backup-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `backup`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "backup": {
                          "$ref": "#/components/schemas/server-backup"
                        }
                      },
                      "required": [
                        "backup"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}/action": {
      "post": {
        "summary": "Выполнение действия над бэкапом диска сервера",
        "description": "Чтобы выполнить действие над бэкапом диска сервера, отправьте POST запрос на `/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}/action`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/server-id"
          },
          {
            "$ref": "#/components/parameters/disk-id"
          },
          {
            "$ref": "#/components/parameters/server-backup-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" -d '{ \"action\": \"mount\"}' \\\n  \"https://api.timeweb.cloud/api/v1/servers/{server_id}/disks/{disk_id}/backups/{backup_id}/action\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Действие над бэкапом.",
                    "enum": [
                      "restore",
                      "mount",
                      "unmount"
                    ],
                    "example": "mount"
                  }
                },
                "required": [
                  "action"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Успешное выполнение действия"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/conflict"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Облачные серверы"
        ]
      }
    },
    "/api/v1/projects": {
      "get": {
        "summary": "Получение списка проектов",
        "description": "Чтобы получить список всех проектов на вашем аккаунте, отправьте GET запрос на `/api/v1/dedicated-servers`.\n\n Тело ответа будет представлять собой объект JSON с ключом `projects`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `projects`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "projects": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/project"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "projects",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "post": {
        "summary": "Создание проекта",
        "description": "Чтобы создать проект, отправьте POST запрос в `api/v1/projects`, задав необходимые атрибуты.\n\nПроект будет создан с использованием предоставленной информации. Тело ответа будет содержать объект JSON с информацией о созданном проекте.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-project"
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"name\":\"Project\"}' \\\n  \"https://api.timeweb.cloud/api/v1/projects\""
          }
        ],
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `project`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "project": {
                          "$ref": "#/components/schemas/project"
                        }
                      },
                      "required": [
                        "project"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}": {
      "get": {
        "summary": "Получение проекта по идентификатору",
        "description": "Чтобы получить проект по идентификатору, отправьте GET запрос на `/api/v1/projects/{project_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `project`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "project": {
                          "$ref": "#/components/schemas/project"
                        }
                      },
                      "required": [
                        "project"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "delete": {
        "summary": "Удаление проекта",
        "description": "Чтобы удалить проект, отправьте запрос DELETE в `api/v1/projects/{project_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99\""
          }
        ],
        "responses": {
          "204": {
            "description": "Проект успешно удален"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "put": {
        "summary": "Изменение проекта",
        "description": "Чтобы изменить проект, отправьте запрос PUT в `api/v1/projects/{project_id}`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update-project"
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PUT \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"name\":\"Project\"}' \\\n  \"https://api.timeweb.cloud/api/v1/projects/99\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `project`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "project": {
                          "$ref": "#/components/schemas/project"
                        }
                      },
                      "required": [
                        "project"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}/resources/balancers": {
      "get": {
        "summary": "Получение списка балансировщиков проекта",
        "description": "Чтобы получить список балансировщиков проекта, отправьте GET запрос на `/api/v1/projects/{project_id}/resources/balancers`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/balancers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `balancers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "balancers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/balancer"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "balancers",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "post": {
        "summary": "Добавление балансировщика в проект",
        "description": "Чтобы добавить балансировщик в проект, отправьте POST запрос на `/api/v1/projects/{project_id}/resources/balancers`, задав необходимые атрибуты.\n\nБалансировщик будет добавлен в указанный проект. Тело ответа будет содержать объект JSON с информацией о добавленном балансировщике.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resource_id": {
                    "type": "number",
                    "description": "Идентификатор добавляемого балансировщика.",
                    "example": 1
                  }
                },
                "required": [
                  "resource_id"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"resource_id\":1}' \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/balancers\""
          }
        ],
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `resource`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "$ref": "#/components/schemas/project-resource"
                        }
                      },
                      "required": [
                        "resource"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}/resources/buckets": {
      "get": {
        "summary": "Получение списка хранилищ проекта",
        "description": "Чтобы получить список хранилищ проекта, отправьте GET запрос на `/api/v1/projects/{project_id}/resources/buckets`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/buckets\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `buckets`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "buckets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/bucket"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "buckets",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "post": {
        "summary": "Добавление хранилища в проект",
        "description": "Чтобы добавить хранилище в проект, отправьте POST запрос на `/api/v1/projects/{project_id}/resources/buckets`, задав необходимые атрибуты.\n\nХранилище будет добавлено в указанный проект. Тело ответа будет содержать объект JSON с информацией о добавленном хранилище.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resource_id": {
                    "type": "number",
                    "description": "Идентификатор добавляемого хранилища.",
                    "example": 1
                  }
                },
                "required": [
                  "resource_id"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"resource_id\":1}' \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/buckets\""
          }
        ],
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `resource`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "$ref": "#/components/schemas/project-resource"
                        }
                      },
                      "required": [
                        "resource"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}/resources/clusters": {
      "get": {
        "summary": "Получение списка кластеров проекта",
        "description": "Чтобы получить список кластеров проекта, отправьте GET запрос на `/api/v1/projects/{project_id}/resources/clusters`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/clusters\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `clusters`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "clusters": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/clusterk8s"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "clusters",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "post": {
        "summary": "Добавление кластера в проект",
        "description": "Чтобы добавить кластер в проект, отправьте POST запрос на `/api/v1/projects/{project_id}/resources/clusters`, задав необходимые атрибуты.\n\nКластер будет добавлен в указанный проект. Тело ответа будет содержать объект JSON с информацией о добавленном кластере.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resource_id": {
                    "type": "number",
                    "description": "Идентификатор добавляемого кластера.",
                    "example": 1
                  }
                },
                "required": [
                  "resource_id"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"resource_id\":1}' \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/clusters\""
          }
        ],
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `resource`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "$ref": "#/components/schemas/project-resource"
                        }
                      },
                      "required": [
                        "resource"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}/resources/servers": {
      "get": {
        "summary": "Получение списка серверов проекта",
        "description": "Чтобы получить список серверов проекта, отправьте GET запрос на `/api/v1/projects/{project_id}/resources/servers`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `servers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "servers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/vds"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "meta",
                        "servers"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "post": {
        "summary": "Добавление сервера в проект",
        "description": "Чтобы добавить сервер в проект, отправьте POST запрос на `/api/v1/projects/{project_id}/resources/servers`, задав необходимые атрибуты.\n\nСервер будет добавлен в указанный проект. Тело ответа будет содержать объект JSON с информацией о добавленном сервере.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resource_id": {
                    "type": "number",
                    "description": "Идентификатор добавляемого сервера.",
                    "example": 1
                  }
                },
                "required": [
                  "resource_id"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"resource_id\":1}' \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/servers\""
          }
        ],
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `resource`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "$ref": "#/components/schemas/project-resource"
                        }
                      },
                      "required": [
                        "resource"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}/resources/databases": {
      "get": {
        "summary": "Получение списка баз данных проекта",
        "description": "Чтобы получить список баз данных проекта, отправьте GET запрос на `/api/v1/projects/{project_id}/resources/databases`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/databases\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `databases`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "databases": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/db"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "databases",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "post": {
        "summary": "Добавление базы данных в проект",
        "description": "Чтобы добавить базу данных в проект, отправьте POST запрос на `/api/v1/projects/{project_id}/resources/databases`, задав необходимые атрибуты.\n\nБаза данных будет добавлена в указанный проект. Тело ответа будет содержать объект JSON с информацией о добавленной базе данных.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resource_id": {
                    "type": "number",
                    "description": "Идентификатор добавляемой базы данных.",
                    "example": 1
                  }
                },
                "required": [
                  "resource_id"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"resource_id\":1}' \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/databases\""
          }
        ],
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `resource`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "$ref": "#/components/schemas/project-resource"
                        }
                      },
                      "required": [
                        "resource"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}/resources/dedicated": {
      "get": {
        "summary": "Получение списка выделенных серверов проекта",
        "description": "Чтобы получить список выделенных серверов проекта, отправьте GET запрос на `/api/v1/projects/{project_id}/resources/dedicated`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/dedicated\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `dedicated_servers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "dedicated_servers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/dedicated-server"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "dedicated_servers",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      },
      "post": {
        "summary": "Добавление выделенного сервера в проект",
        "description": "Чтобы добавить выделенный сервер в проект, отправьте POST запрос на `/api/v1/projects/{project_id}/resources/dedicated`, задав необходимые атрибуты.\n\nВыделенный сервер будет добавлен в указанный проект. Тело ответа будет содержать объект JSON с информацией о добавленном выделенном сервере.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "resource_id": {
                    "type": "number",
                    "description": "Идентификатор добавляемого выделенного сервера.",
                    "example": 1
                  }
                },
                "required": [
                  "resource_id"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"resource_id\":1}' \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/databases\""
          }
        ],
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `resource`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "$ref": "#/components/schemas/project-resource"
                        }
                      },
                      "required": [
                        "resource"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}/resources": {
      "get": {
        "summary": "Получение всех ресурсов проекта",
        "description": "Чтобы получить все ресурсы проекта, отправьте GET запрос на `/api/v1/projects/{project_id}/resources`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключами: `servers`, `balancers`, `buckets`, `clusters`, `databases`, `dedicated_servers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "servers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/vds"
                          }
                        },
                        "balancers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/balancer"
                          }
                        },
                        "buckets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/bucket"
                          }
                        },
                        "clusters": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/clusterk8s"
                          }
                        },
                        "databases": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/db"
                          }
                        },
                        "dedicated_servers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/dedicated-server"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "servers",
                        "balancers",
                        "buckets",
                        "clusters",
                        "databases",
                        "dedicated_servers",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/resources/balancers": {
      "get": {
        "summary": "Получение списка всех балансировщиков на аккаунте",
        "description": "Чтобы получить список всех балансировщиков на аккаунте, отправьте GET запрос на `/api/v1/projects/resources/balancers`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/resources/balancers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `balancers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "balancers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/balancer"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "balancers",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/resources/servers": {
      "get": {
        "summary": "Получение списка всех серверов на аккаунте",
        "description": "Чтобы получить список всех серверов на аккаунте, отправьте GET запрос на `/api/v1/projects/resources/servers`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/resources/servers\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `servers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "servers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/vds"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "meta",
                        "servers"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/resources/buckets": {
      "get": {
        "summary": "Получение списка всех хранилищ на аккаунте",
        "description": "Чтобы получить список всех хранилищ на аккаунте, отправьте GET запрос на `/api/v1/projects/resources/buckets`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/resources/buckets\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `buckets`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "buckets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/bucket"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "buckets",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/resources/clusters": {
      "get": {
        "summary": "Получение списка всех кластеров на аккаунте",
        "description": "Чтобы получить список всех кластеров на аккаунте, отправьте GET запрос на `/api/v1/projects/resources/clusters`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/resources/clusters\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `clusters`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "clusters": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/clusterk8s"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "clusters",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/resources/databases": {
      "get": {
        "summary": "Получение списка всех баз данных на аккаунте",
        "description": "Чтобы получить список всех баз данных на аккаунте, отправьте GET запрос на `/api/v1/projects/resources/databases`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/resources/databases\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `databases`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "databases": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/db"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "databases",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/resources/dedicated": {
      "get": {
        "summary": "Получение списка всех выделенных серверов на аккаунте",
        "description": "Чтобы получить список всех выделенных серверов на аккаунте, отправьте GET запрос на `/api/v1/projects/resources/dedicated`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/projects/resources/dedicated\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `dedicated_servers`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "dedicated_servers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/dedicated-server"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "dedicated_servers",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/projects/{project_id}/resources/transfer": {
      "put": {
        "summary": "Перенести ресурс в другой проект",
        "description": "Чтобы перенести ресурс в другой проект, отправьте запрос PUT в `api/v1/projects/{project_id}/resources/transfer`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/project-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resource-transfer"
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PUT \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"to_project\":1,\"resource_id\":1,\"resource_type\":\"server\"}' \\\n  \"https://api.timeweb.cloud/api/v1/projects/99/resources/transfer\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `resource`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "$ref": "#/components/schemas/project-resource"
                        }
                      },
                      "required": [
                        "resource"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Проекты"
        ]
      }
    },
    "/api/v1/storages/buckets": {
      "get": {
        "summary": "Получение списка хранилищ аккаунта",
        "description": "Чтобы получить список хранилищ аккаунта, отправьте GET запрос на `/api/v1/storages/buckets`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `buckets`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "buckets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/bucket"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "buckets",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      },
      "post": {
        "summary": "Создание хранилища",
        "description": "Чтобы создать хранилище, отправьте POST запрос на `/api/v1/storages/buckets`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название хранилища.",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "test"
                  },
                  "type": {
                    "type": "string",
                    "description": "Тип хранилища.",
                    "enum": [
                      "private",
                      "public"
                    ],
                    "example": "private"
                  },
                  "preset_id": {
                    "type": "number",
                    "description": "Идентификатор тарифа.",
                    "example": 1
                  }
                },
                "required": [
                  "name",
                  "type",
                  "preset_id"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"name\":\"test\",\"type\":\"private\",\"preset_id\":1}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets\""
          }
        ],
        "responses": {
          "201": {
            "description": "Объект JSON c ключом `bucket`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "$ref": "#/components/schemas/bucket"
                        }
                      },
                      "required": [
                        "bucket"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}": {
      "delete": {
        "summary": "Удаление хранилища на аккаунте",
        "description": "Чтобы удалить хранилище, отправьте DELETE запрос на `/api/v1/storages/buckets/{bucket_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1\""
          }
        ],
        "responses": {
          "204": {
            "description": "Хранилище успешно удалено"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      },
      "patch": {
        "summary": "Изменение хранилища на аккаунте",
        "description": "Чтобы изменить хранилище, отправьте PATCH запрос на `/api/v1/storages/buckets/{bucket_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "preset_id": {
                    "type": "number",
                    "description": "Идентификатор тарифа.",
                    "example": 1
                  },
                  "bucket_type": {
                    "type": "string",
                    "description": "Тип хранилища.",
                    "enum": [
                      "private",
                      "public"
                    ],
                    "example": "public"
                  }
                }
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"preset_id\":1}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `bucket`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "$ref": "#/components/schemas/bucket"
                        }
                      },
                      "required": [
                        "bucket"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/presets/storages": {
      "get": {
        "summary": "Получение списка тарифов для хранилищ",
        "description": "Чтобы получить список тарифов для хранилищ, отправьте GET запрос на `/api/v1/presets/storages`.\n\n Тело ответа будет представлять собой объект JSON с ключом `storages_presets`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/presets/storages\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON с ключом `storages_presets`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "storages_presets": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/presets-storage"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "storages_presets",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/users": {
      "get": {
        "summary": "Получение списка пользователей хранилищ аккаунта",
        "description": "Чтобы получить список пользователей хранилищ аккаунта, отправьте GET запрос на `/api/v1/storages/users`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/storages/users\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `users`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/bucket-user"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "users",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/users/{user_id}": {
      "patch": {
        "summary": "Изменение пароля пользователя-администратора хранилища",
        "description": "Чтобы изменить пароль пользователя-администратора хранилища, отправьте POST запрос на `/api/v1/storages/users/{user_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/user-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secret_key": {
                    "type": "string",
                    "description": "Новый пароль пользователя-администратора хранилища.",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "password"
                  }
                },
                "required": [
                  "secret_key"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"secret_key\":\"password\"}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/users/1\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `user`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/bucket-user"
                        }
                      },
                      "required": [
                        "user"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}/transfer-status": {
      "get": {
        "summary": "Получение статуса переноса хранилища от стороннего S3 в Timeweb Cloud",
        "description": "Чтобы получить статус переноса хранилища от стороннего S3 в Timeweb Cloud, отправьте GET запрос на `/api/v1/storages/buckets/{bucket_id}/transfer-status`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/transfer-status\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `transfer_status`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "transfer_status": {
                          "$ref": "#/components/schemas/transfer-status"
                        }
                      },
                      "required": [
                        "transfer_status"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/transfer": {
      "post": {
        "summary": "Перенос хранилища от стороннего провайдера S3 в Timeweb Cloud",
        "description": "Чтобы перенести хранилище от стороннего провайдера S3 в Timeweb Cloud, отправьте POST запрос на `/api/v1/storages/transfer`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_key": {
                    "type": "string",
                    "description": "Идентификатор доступа стороннего s3 хранилища.",
                    "example": "access_key"
                  },
                  "secret_key": {
                    "type": "string",
                    "description": "Пароль доступа стороннего s3 хранилища.",
                    "example": "secret_key"
                  },
                  "location": {
                    "type": "string",
                    "description": "Регион хранилища источника.",
                    "example": "ru-1"
                  },
                  "is_force_path_style": {
                    "type": "boolean",
                    "description": "Это логическое значение, которое показывает, следует ли принудительно указывать URL-адреса для объектов S3.",
                    "example": true
                  },
                  "endpoint": {
                    "type": "string",
                    "description": "URL s3 хранилища источника.",
                    "example": "https://s3.test.ru"
                  },
                  "bucket_name": {
                    "type": "string",
                    "description": "Имя хранилища источника.",
                    "example": "bucket_name"
                  },
                  "new_bucket_name": {
                    "type": "string",
                    "description": "Имя хранилища получателя.",
                    "example": "new_bucket_name"
                  }
                },
                "required": [
                  "access_key",
                  "secret_key",
                  "location",
                  "is_force_path_style",
                  "endpoint",
                  "bucket_name",
                  "new_bucket_name"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"access_key\":\"access_key\",\"secret_key\":\"secret_key\",\"location\":\"ru-1\",\"path_style\":true,\"endpoint\":\"https://s3.test.ru\",\"bucket_name\":\"bucket_name\",\"new_bucket_name\":\"new_bucket_name\"}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/transfer\""
          }
        ],
        "responses": {
          "204": {
            "description": "Задание на перенос отправлено"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}/subdomains": {
      "get": {
        "summary": "Получение списка поддоменов хранилища",
        "description": "Чтобы получить список поддоменов хранилища, отправьте GET запрос на `/api/v1/storages/buckets/{bucket_id}/subdomains`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/subdomains\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `subdomains`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "subdomains": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/subdomain"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "subdomains",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      },
      "post": {
        "summary": "Добавление поддоменов для хранилища",
        "description": "Добавить поддомены для хранилища, отправьте POST запрос на `/api/v1/storages/buckets/{bucket_id}/subdomains`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subdomains": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "test.example.com"
                    }
                  }
                },
                "required": [
                  "subdomains"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"subdomains\":[\"test.example.com\"]}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/subdomains\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `subdomains`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "subdomains": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/added-subdomain"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "subdomains",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      },
      "delete": {
        "summary": "Удаление поддоменов хранилища",
        "description": "Чтобы удалить поддомены хранилища, отправьте DELETE запрос на `/api/v1/storages/buckets/{bucket_id}/subdomains`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"subdomains\":[\"test.example.com\"]}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/subdomains\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subdomains": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "test.example.com"
                    }
                  }
                },
                "required": [
                  "subdomains"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `subdomains`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "subdomains": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/added-subdomain"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "subdomains",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}/object-manager/list": {
      "get": {
        "summary": "Получение списка файлов в хранилище по префиксу",
        "description": "Чтобы получить список файлов в хранилище по префиксу, отправьте GET запрос на `/api/v1/storages/buckets/{bucket_id}/object-manager/list`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          },
          {
            "$ref": "#/components/parameters/prefix"
          },
          {
            "$ref": "#/components/parameters/multipart"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/object-manager/list\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `files`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "files": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/s3-object"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        }
                      },
                      "required": [
                        "files",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}/object-manager/rename": {
      "post": {
        "summary": "Переименование файла/директории в хранилище",
        "description": "Чтобы переименовать файл/директорию в хранилище, отправьте POST запрос на `/api/v1/storages/buckets/{bucket_id}/object-manager/rename`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_filename": {
                    "type": "string",
                    "description": "Новое название файла или папки. Названия папок должны быть указаны с \"/\" в конце, например: \"dirname/\".",
                    "example": "new_filename"
                  },
                  "old_filename": {
                    "type": "string",
                    "description": "Старое название файла или папки. Названия папок должны быть указаны с \"/\" в конце, например: \"dirname/\".",
                    "example": "old_filename"
                  }
                },
                "required": [
                  "new_filename",
                  "old_filename"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"new_filename\":\"new_name\",\"old_filename\":\"old_name\"}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/object-manager/rename\""
          }
        ],
        "responses": {
          "204": {
            "description": "Файл успешно переименован"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}/object-manager/remove": {
      "delete": {
        "summary": "Удаление файла/директории в хранилище",
        "description": "Чтобы удалить файл или директорию с вложениями, отправьте DELETE запрос на `/api/v1/storages/buckets/{bucket_id}/object-manager/remove`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          },
          {
            "$ref": "#/components/parameters/multipart"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "test1/test2"
                    }
                  }
                },
                "required": [
                  "source"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"source\":[\"test1/test2\"]}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/object-manager/remove\""
          }
        ],
        "responses": {
          "204": {
            "description": "Задание на удаление отправлено"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}/object-manager/copy": {
      "post": {
        "summary": "Копирование файла/директории в хранилище",
        "description": "Чтобы скопировать файла или директорию с вложениями, отправьте POST запрос на `/api/v1/storages/buckets/{bucket_id}/object-manager/copy`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destination": {
                    "type": "string",
                    "description": "Новый путь до файлов.",
                    "example": "new_path"
                  },
                  "source": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Путь до файла или папки, содержимое которой нужно скопировать. Название папки должно быть указано с \"/\" в конце, например: \"dirname/\".",
                      "example": "test1/test2"
                    }
                  }
                },
                "required": [
                  "destination",
                  "source"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"destination\":\"new_path\",\"source\":[\"test1/test2\"]}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/object-manager/copy\""
          }
        ],
        "responses": {
          "204": {
            "description": "Задание на копирование отправлено"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}/object-manager/upload": {
      "post": {
        "summary": "Загрузка файлов в хранилище",
        "description": "Чтобы загрузить файлы в хранилище, отправьте POST запрос на `/api/v1/storages/buckets/{bucket_id}/object-manager/upload`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          },
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "required": [
                  "files"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"files\":[\"example\"]}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/object-manager/upload\""
          }
        ],
        "responses": {
          "204": {
            "description": "Файл успешно загружен"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/buckets/{bucket_id}/object-manager/mkdir": {
      "post": {
        "summary": "Создание директории в хранилище",
        "description": "Чтобы создать директорию в хранилище, отправьте POST запрос на `/api/v1/storages/buckets/{bucket_id}/object-manager/mkdir`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/bucket-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dir_name": {
                    "type": "string",
                    "description": "Название директории.",
                    "example": "dir"
                  }
                },
                "required": [
                  "dir_name"
                ]
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"dir_name\":\"dir\"}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/buckets/1051/object-manager/mkdir\""
          }
        ],
        "responses": {
          "201": {
            "description": "Директория успешно создана"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {},
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/storages/certificates/generate": {
      "post": {
        "summary": "Добавление сертификата для поддомена хранилища",
        "description": "Чтобы добавить сертификат для поддомена хранилища, отправьте POST запрос на `/api/v1/storages/certificates/generate`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subdomain": {
                    "type": "string",
                    "example": "test.example.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"subdomain\":\"test.example.com\"}' \\\n  \"https://api.timeweb.cloud/api/v1/storages/certificates/generate\""
          }
        ],
        "responses": {
          "200": {
            "description": "Сертификат добавлен"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "S3-хранилище"
        ]
      }
    },
    "/api/v1/auth/api-keys": {
      "get": {
        "summary": "Получение списка выпущенных токенов",
        "description": "Чтобы получить список выпущенных токенов, отправьте GET запрос на `/api/v1/auth/api-keys`.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X GET \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/auth/api-keys\""
          }
        ],
        "responses": {
          "200": {
            "description": "Объект JSON c ключом `api_keys`",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/meta"
                        },
                        "api_keys": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/api-key"
                          }
                        }
                      },
                      "required": [
                        "meta",
                        "api_keys"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Токены API"
        ]
      },
      "post": {
        "summary": "Создание токена",
        "description": "Чтобы создать токен, отправьте POST запрос на `/api/v1/auth/api-keys` задав необходимые атрибуты.\n\nТокен будет создан с использованием предоставленной информации. Тело ответа будет содержать объект JSON с информацией о созданном токене.",
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"name\":\"example\",\"expire\":\"2023-12-20T12:03:53.755Z\"}' \\\n  \"https://api.timeweb.cloud/api/v1/auth/api-keys\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create-api-key"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Ответ будет представлять собой объект JSON c ключом `api_key`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "api_key": {
                          "$ref": "#/components/schemas/created-api-key"
                        }
                      },
                      "required": [
                        "api_key"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Токены API"
        ]
      }
    },
    "/api/v1/auth/api-keys/{token_id}": {
      "patch": {
        "summary": "Переименовать токен",
        "description": "Чтобы переименовать токен, отправьте PATCH запрос на `/api/v1/auth/api-keys/{token_id}` задав необходимые атрибуты.",
        "parameters": [
          {
            "$ref": "#/components/parameters/api-key-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PATCH \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  -d '{\"name\":\"example\"}' \\\n  \"https://api.timeweb.cloud/api/v1/auth/api-keys/913a3a06-1eb9-4e9c-bc63-6ca6944e883b\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rename-api-key"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `api_key`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "api_key": {
                          "$ref": "#/components/schemas/api-key"
                        }
                      },
                      "required": [
                        "api_key"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Токены API"
        ]
      },
      "put": {
        "summary": "Перевыпустить токен",
        "description": "Чтобы перевыпустить токен, отправьте PUT запрос на `/api/v1/auth/api-keys/{token_id}` задав необходимые атрибуты.",
        "parameters": [
          {
            "$ref": "#/components/parameters/api-key-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X PUT \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/auth/api-keys/913a3a06-1eb9-4e9c-bc63-6ca6944e883b\""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refresh-api-key"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ответ будет представлять собой объект JSON c ключом `api_key`.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "api_key": {
                          "$ref": "#/components/schemas/created-api-key"
                        }
                      },
                      "required": [
                        "api_key"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response_id": {
                          "$ref": "#/components/schemas/response_id"
                        }
                      },
                      "required": [
                        "response_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Токены API"
        ]
      },
      "delete": {
        "summary": "Удалить токен",
        "description": "Чтобы удалить токен, отправьте DELETE запрос на `/api/v1/auth/api-keys/{token_id}`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/api-key-id"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -X DELETE \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer ${TIMEWEB_CLOUD_TOKEN}\" \\\n  \"https://api.timeweb.cloud/api/v1/auth/api-keys/913a3a06-1eb9-4e9c-bc63-6ca6944e883b\""
          }
        ],
        "responses": {
          "204": {
            "description": "Токен успешно удален."
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "tags": [
          "Токены API"
        ]
      }
    }
  },
  "components": {
    "responses": {
      "400": {
        "$ref": "#/components/responses/bad-request"
      },
      "401": {
        "$ref": "#/components/responses/unauthorized"
      },
      "403": {
        "$ref": "#/components/responses/forbidden"
      },
      "404": {
        "$ref": "#/components/responses/not-found"
      },
      "409": {
        "$ref": "#/components/responses/conflict"
      },
      "429": {
        "$ref": "#/components/responses/too-many-requests"
      },
      "500": {
        "$ref": "#/components/responses/internal-server-error"
      },
      "conflict": {
        "description": "Конфликт",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status_code": {
                  "type": "number",
                  "example": 409,
                  "description": "Короткий идентификатор, соответствующий возвращаемому коду состояния HTTP."
                },
                "message": {
                  "description": "Сообщение, предоставляющее дополнительную информацию об ошибке, в том числе сведения, помогающие устранить ее, когда это возможно.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ],
                  "example": "Conflict"
                },
                "error_code": {
                  "type": "string",
                  "example": "conflict",
                  "description": "Краткое описание ошибки HTTP на основе статуса."
                },
                "response_id": {
                  "$ref": "#/components/schemas/response-id_response_id"
                }
              },
              "required": [
                "status_code",
                "error_code",
                "response_id"
              ]
            }
          }
        }
      },
      "bad-request": {
        "description": "Некорректный запрос",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status_code": {
                  "type": "number",
                  "description": "Короткий идентификатор, соответствующий возвращаемому коду состояния HTTP.",
                  "example": 400
                },
                "message": {
                  "example": "Value must be a number conforming to the specified constraints",
                  "description": "Сообщение, предоставляющее дополнительную информацию об ошибке, в том числе сведения, помогающие устранить ее, когда это возможно.",
                  "oneOf": [
                    {
                      "type": "string",
                      "description": " "
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                },
                "error_code": {
                  "type": "string",
                  "example": "bad_request",
                  "description": "Краткое описание ошибки HTTP на основе статуса."
                },
                "response_id": {
                  "$ref": "#/components/schemas/response_id"
                }
              },
              "required": [
                "status_code",
                "error_code",
                "response_id"
              ]
            }
          }
        }
      },
      "unauthorized": {
        "description": "Не авторизован",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status_code": {
                  "type": "number",
                  "description": "Короткий идентификатор, соответствующий возвращаемому коду состояния HTTP.",
                  "example": 401
                },
                "message": {
                  "description": "Сообщение, предоставляющее дополнительную информацию об ошибке, в том числе сведения, помогающие устранить ее, когда это возможно.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ],
                  "example": "Unauthorized"
                },
                "error_code": {
                  "type": "string",
                  "example": "unauthorized",
                  "description": "Краткое описание ошибки HTTP на основе статуса."
                },
                "response_id": {
                  "$ref": "#/components/schemas/response_id"
                }
              },
              "required": [
                "status_code",
                "error_code",
                "response_id"
              ]
            }
          }
        }
      },
      "forbidden": {
        "description": "Запрещено",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status_code": {
                  "type": "number",
                  "example": 403,
                  "description": "Короткий идентификатор, соответствующий возвращаемому коду состояния HTTP."
                },
                "message": {
                  "description": "Сообщение, предоставляющее дополнительную информацию об ошибке, в том числе сведения, помогающие устранить ее, когда это возможно.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ],
                  "example": "Forbidden"
                },
                "error_code": {
                  "type": "string",
                  "example": "forbidden",
                  "description": "Краткое описание ошибки HTTP на основе статуса."
                },
                "response_id": {
                  "$ref": "#/components/schemas/response_id"
                }
              },
              "required": [
                "status_code",
                "error_code",
                "response_id"
              ]
            }
          }
        }
      },
      "not-found": {
        "description": "Не найдено",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status_code": {
                  "type": "number",
                  "example": 404,
                  "description": "Короткий идентификатор, соответствующий возвращаемому коду состояния HTTP."
                },
                "message": {
                  "description": "Сообщение, предоставляющее дополнительную информацию об ошибке, в том числе сведения, помогающие устранить ее, когда это возможно.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ],
                  "example": "Resource not found"
                },
                "error_code": {
                  "type": "string",
                  "example": "not_found",
                  "description": "Краткое описание ошибки HTTP на основе статуса."
                },
                "response_id": {
                  "$ref": "#/components/schemas/response_id"
                }
              },
              "required": [
                "status_code",
                "error_code",
                "response_id"
              ]
            }
          }
        }
      },
      "too-many-requests": {
        "description": "Слишком много запросов",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status_code": {
                  "type": "number",
                  "example": 429,
                  "description": "Короткий идентификатор, соответствующий возвращаемому коду состояния HTTP."
                },
                "message": {
                  "description": "Сообщение, предоставляющее дополнительную информацию об ошибке, в том числе сведения, помогающие устранить ее, когда это возможно.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ],
                  "example": "Too many requests"
                },
                "error_code": {
                  "type": "string",
                  "example": "too_many_requests",
                  "description": "Краткое описание ошибки HTTP на основе статуса."
                },
                "response_id": {
                  "$ref": "#/components/schemas/response_id"
                }
              },
              "required": [
                "status_code",
                "error_code",
                "response_id"
              ]
            }
          }
        }
      },
      "internal-server-error": {
        "description": "Внутренняя ошибка сервера",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status_code": {
                  "type": "number",
                  "example": 500,
                  "description": "Короткий идентификатор, соответствующий возвращаемому коду состояния HTTP."
                },
                "message": {
                  "description": "Сообщение, предоставляющее дополнительную информацию об ошибке, в том числе сведения, помогающие устранить ее, когда это возможно.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ],
                  "example": "Internal server error"
                },
                "error_code": {
                  "type": "string",
                  "example": "internal_server_error",
                  "description": "Краткое описание ошибки HTTP на основе статуса."
                },
                "response_id": {
                  "$ref": "#/components/schemas/response_id"
                }
              },
              "required": [
                "status_code",
                "error_code",
                "response_id"
              ]
            }
          }
        }
      }
    },
    "schemas": {
      "response_id": {
        "description": "Идентификатор запроса, который можно указывать при обращении в службу технической поддержки, чтобы помочь определить проблему.",
        "type": "string",
        "format": "uuid",
        "example": "15095f25-aac3-4d60-a788-96cb5136f186"
      },
      "finances": {
        "description": "Платежная информация",
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "Баланс аккаунта.",
            "example": 7378.3
          },
          "currency": {
            "type": "string",
            "description": "Валюта, которая используется на аккаунте.",
            "example": "RUB"
          },
          "discount_end_date_at": {
            "type": "string",
            "nullable": true,
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда заканчивается скидка для аккаунта.",
            "example": "2021-02-25T11:04:15Z"
          },
          "discount_percent": {
            "type": "number",
            "description": "Процент скидки для аккаунта.",
            "example": 5
          },
          "hourly_cost": {
            "type": "number",
            "description": "Стоимость услуг на аккаунте в час.",
            "example": 33.192622950819676
          },
          "hourly_fee": {
            "type": "number",
            "description": "Абонентская плата в час (с учетом скидок).",
            "example": 33.192622950819676
          },
          "monthly_cost": {
            "type": "number",
            "description": "Стоимость услуг на аккаунте в месяц.",
            "example": 24297
          },
          "monthly_fee": {
            "type": "number",
            "description": "Абонентская плата в месяц (с учетом скидок).",
            "example": 24297
          },
          "total_paid": {
            "type": "number",
            "description": "Общая сумма платежей на аккаунте.",
            "example": 29191.51
          },
          "hours_left": {
            "type": "number",
            "nullable": true,
            "description": "Сколько часов работы услуг оплачено на аккаунте.",
            "example": 10
          },
          "autopay_card_info": {
            "type": "string",
            "nullable": true,
            "description": "Информация о карте, используемой для автоплатежей.",
            "example": "553611XXXXXX1111"
          }
        },
        "required": [
          "balance",
          "currency",
          "discount_end_date_at",
          "discount_percent",
          "hourly_cost",
          "hourly_fee",
          "monthly_cost",
          "monthly_fee",
          "total_paid",
          "hours_left",
          "autopay_card_info"
        ]
      },
      "status": {
        "description": "Статус аккаунта",
        "type": "object",
        "properties": {
          "is_blocked": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, заблокирован ли аккаунт.",
            "example": false
          },
          "is_permanent_blocked": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, заблокирован ли аккаунт навсегда.",
            "example": false
          },
          "is_send_bill_letters": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, требуется ли отправлять счета на почту.",
            "example": false
          },
          "company_info": {
            "type": "object",
            "description": "Информация о компании.",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор компании.",
                "example": 0
              },
              "name": {
                "type": "string",
                "description": "Название компании.",
                "example": "Пример"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "last_password_changed_at": {
            "type": "string",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда последний раз изменялся пароль.",
            "example": "2021-02-25T11:04:15Z"
          },
          "ym_client_id": {
            "type": "string",
            "nullable": true,
            "description": "Идентификатор аккаунта для яндекс метрики.",
            "example": null
          }
        },
        "required": [
          "is_blocked",
          "is_permanent_blocked",
          "is_send_bill_letters",
          "company_info",
          "last_password_changed_at",
          "ym_client_id"
        ]
      },
      "Meta": {
        "title": "Meta",
        "required": [
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "integer",
            "description": "Число элементов в результате"
          }
        }
      },
      "ImageStatus": {
        "title": "ImageStatus",
        "enum": [
          "new",
          "created",
          "failed"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ImageOutAPI": {
        "title": "ImageOutAPI",
        "required": [
          "id",
          "status",
          "created_at",
          "size",
          "description",
          "disk_id",
          "location"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Идентификатор образа"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageStatus"
              }
            ],
            "description": "Статус образа"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "Дата и время создания",
            "format": "date-time"
          },
          "size": {
            "title": "Size",
            "type": "integer",
            "description": "Размер в мегабайтах"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Описание образа"
          },
          "disk_id": {
            "title": "Disk Id",
            "type": "integer",
            "description": "Идентификатор связанного с образом диска"
          },
          "location": {
            "title": "Location",
            "type": "string",
            "description": "Локация, в которой создан образ"
          }
        }
      },
      "ImagesOutResponse": {
        "title": "ImagesOutResponse",
        "required": [
          "meta",
          "images"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "$ref": "#/components/schemas/Meta"
              }
            ],
            "description": "Вспомогательная информация о возвращаемой сущности"
          },
          "images": {
            "title": "Images",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageOutAPI"
            },
            "description": "Массив объектов Образ"
          }
        }
      },
      "BaseError": {
        "title": "BaseError",
        "required": [
          "status_code",
          "error_code",
          "message"
        ],
        "type": "object",
        "properties": {
          "status_code": {
            "title": "Status Code",
            "type": "integer"
          },
          "error_code": {
            "title": "Error Code",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {}
              }
            ]
          },
          "response_id": {
            "title": "Response Id",
            "type": "string"
          }
        }
      },
      "ImageInAPI": {
        "title": "ImageInAPI",
        "required": [
          "description",
          "disk_id"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Описание образа"
          },
          "disk_id": {
            "title": "Disk Id",
            "type": "integer",
            "description": "Идентификатор диска, для которого создается образ"
          }
        },
        "example": {
          "description": "Мой образ для диска 123",
          "disk_id": 123
        }
      },
      "ImageOutResponse": {
        "title": "ImageOutResponse",
        "required": [
          "image"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "image": {
            "title": "Image",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageOutAPI"
              }
            ],
            "description": "Образ"
          }
        }
      },
      "ImageUpdateAPI": {
        "title": "ImageUpdateAPI",
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Описание образа"
          }
        },
        "example": {
          "description": "Описание образа"
        }
      },
      "URLType": {
        "title": "URLType",
        "enum": [
          "timeweb",
          "google_drive",
          "yandex"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ImageDownloadAPI": {
        "title": "ImageDownloadAPI",
        "required": [
          "id",
          "created_at",
          "image",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Идентификатор ссылки"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "Дата и время создания ссылки",
            "format": "date-time"
          },
          "image": {
            "title": "Image",
            "type": "string",
            "description": "Идентификатор образа"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/URLType"
              }
            ],
            "description": "Тип ссылки"
          },
          "url": {
            "title": "Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "Ссылка на скачивание",
            "format": "uri"
          }
        }
      },
      "ImageDownloadsResponse": {
        "title": "ImageDownloadsResponse",
        "required": [
          "meta",
          "downloads"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "$ref": "#/components/schemas/Meta"
              }
            ],
            "description": "Вспомогательная информация о возвращаемой сущности"
          },
          "downloads": {
            "title": "Downloads",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageDownloadAPI"
            },
            "description": "Массив объектов \"Ссылка на загрузку\""
          }
        }
      },
      "ImageDownloadResponse": {
        "title": "ImageDownloadResponse",
        "required": [
          "download"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "download": {
            "title": "Download",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageDownloadAPI"
              }
            ],
            "description": "Объект ссылки на загрузку"
          }
        }
      },
      "meta": {
        "description": "Вспомогательная информация о возвращаемой сущности.",
        "properties": {
          "total": {
            "type": "number",
            "example": 10,
            "description": "Общее количество элементов в коллекции."
          }
        },
        "type": "object"
      },
      "rule": {
        "description": "Правило для балансировщика",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра правила для балансировщика. Автоматически генерируется при создании.",
            "example": 1
          },
          "balancer_proto": {
            "type": "string",
            "description": "Протокол балансировщика.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "balancer_port": {
            "type": "number",
            "description": "Порт балансировщика.",
            "example": 80
          },
          "server_proto": {
            "type": "string",
            "description": "Протокол сервера.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "server_port": {
            "type": "number",
            "description": "Порт сервера.",
            "example": 80
          }
        },
        "required": [
          "id",
          "balancer_proto",
          "balancer_port",
          "server_proto",
          "server_port"
        ]
      },
      "balancer": {
        "description": "Балансировщик",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра балансировщика. Автоматически генерируется при создании.",
            "example": 1
          },
          "algo": {
            "type": "string",
            "description": "Алгоритм переключений балансировщика.",
            "enum": [
              "roundrobin",
              "leastconn"
            ],
            "example": "roundrobin"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда был создан балансировщик.",
            "example": "2022-10-25T15:15:45.000Z"
          },
          "fall": {
            "type": "number",
            "description": "Порог количества ошибок.",
            "example": 3
          },
          "inter": {
            "type": "number",
            "description": "Интервал проверки.",
            "example": 10
          },
          "ip": {
            "type": "string",
            "nullable": true,
            "format": "ipv4",
            "description": "IP-адрес сетевого интерфейса IPv4.",
            "example": "1.1.1.1"
          },
          "local_ip": {
            "type": "string",
            "nullable": true,
            "format": "ipv4",
            "description": "Локальный IP-адрес сетевого интерфейса IPv4.",
            "example": "1.1.1.1"
          },
          "is_keepalive": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, выдает ли балансировщик сигнал о проверке жизнеспособности",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "Удобочитаемое имя, установленное для балансировщика.",
            "example": "Cute Quail"
          },
          "path": {
            "type": "string",
            "description": "Адрес балансировщика.",
            "example": "/"
          },
          "port": {
            "type": "number",
            "description": "Порт балансировщика.",
            "example": 80
          },
          "proto": {
            "type": "string",
            "description": "Протокол.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "rise": {
            "type": "number",
            "description": "Порог количества успешных ответов.",
            "example": 2
          },
          "preset_id": {
            "type": "number",
            "description": "Идентификатор тарифа.",
            "example": 5
          },
          "is_ssl": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, требуется ли перенаправление на ssl.",
            "example": true
          },
          "status": {
            "type": "string",
            "description": "Статус балансировщика.",
            "enum": [
              "started",
              "stoped",
              "starting",
              "no_paid"
            ],
            "example": "started"
          },
          "is_sticky": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, сохраняется ли сессия.",
            "example": true
          },
          "timeout": {
            "type": "number",
            "description": "Таймаут ответа балансировщика.",
            "example": 5
          },
          "is_use_proxy": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, выступает ли балансировщик в качестве прокси",
            "example": true
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/rule"
            }
          },
          "ips": {
            "description": "Список ip адресов, привязанных к балансировщику",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          }
        },
        "required": [
          "id",
          "algo",
          "created_at",
          "fall",
          "inter",
          "ip",
          "local_ip",
          "is_keepalive",
          "name",
          "path",
          "port",
          "proto",
          "rise",
          "preset_id",
          "is_ssl",
          "status",
          "is_sticky",
          "timeout",
          "is_use_proxy",
          "rules",
          "ips"
        ]
      },
      "create-balancer": {
        "properties": {
          "name": {
            "type": "string",
            "description": "Удобочитаемое имя, установленное для балансировщика.",
            "example": "Cute Quail"
          },
          "algo": {
            "type": "string",
            "description": "Алгоритм переключений балансировщика.",
            "enum": [
              "roundrobin",
              "leastconn"
            ],
            "example": "roundrobin"
          },
          "is_sticky": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, сохраняется ли сессия.",
            "example": true
          },
          "is_use_proxy": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, выступает ли балансировщик в качестве прокси",
            "example": true
          },
          "is_ssl": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, требуется ли перенаправление на ssl.",
            "example": true
          },
          "is_keepalive": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, выдает ли балансировщик сигнал о проверке жизнеспособности",
            "example": true
          },
          "proto": {
            "type": "string",
            "description": "Протокол.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "port": {
            "type": "number",
            "description": "Порт балансировщика.",
            "example": 80
          },
          "path": {
            "type": "string",
            "description": "Адрес балансировщика.",
            "example": "/"
          },
          "inter": {
            "type": "number",
            "description": "Интервал проверки.",
            "example": 10
          },
          "timeout": {
            "type": "number",
            "description": "Таймаут ответа балансировщика.",
            "example": 5
          },
          "fall": {
            "type": "number",
            "description": "Порог количества ошибок.",
            "example": 3
          },
          "rise": {
            "type": "number",
            "description": "Порог количества успешных ответов.",
            "example": 2
          },
          "preset_id": {
            "type": "number",
            "description": "Идентификатор тарифа.",
            "example": 5
          }
        },
        "type": "object",
        "required": [
          "algo",
          "fall",
          "inter",
          "is_keepalive",
          "name",
          "path",
          "port",
          "proto",
          "rise",
          "preset_id",
          "is_ssl",
          "is_sticky",
          "timeout",
          "is_use_proxy"
        ]
      },
      "update-balancer": {
        "properties": {
          "name": {
            "type": "string",
            "description": "Удобочитаемое имя, установленное для балансировщика.",
            "example": "Cute Quail"
          },
          "algo": {
            "type": "string",
            "description": "Алгоритм переключений балансировщика.",
            "enum": [
              "roundrobin",
              "leastconn"
            ],
            "example": "roundrobin"
          },
          "is_sticky": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, сохраняется ли сессия.",
            "example": true
          },
          "is_use_proxy": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, выступает ли балансировщик в качестве прокси",
            "example": true
          },
          "is_ssl": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, требуется ли перенаправление на ssl.",
            "example": true
          },
          "is_keepalive": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, выдает ли балансировщик сигнал о проверке жизнеспособности",
            "example": true
          },
          "proto": {
            "type": "string",
            "description": "Протокол.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "port": {
            "type": "number",
            "description": "Порт балансировщика.",
            "example": 80
          },
          "path": {
            "type": "string",
            "description": "Адрес балансировщика.",
            "example": "/"
          },
          "inter": {
            "type": "number",
            "description": "Интервал проверки.",
            "example": 10
          },
          "timeout": {
            "type": "number",
            "description": "Таймаут ответа балансировщика.",
            "example": 5
          },
          "fall": {
            "type": "number",
            "description": "Порог количества ошибок.",
            "example": 3
          },
          "rise": {
            "type": "number",
            "description": "Порог количества успешных ответов.",
            "example": 2
          },
          "preset_id": {
            "type": "number",
            "description": "Идентификатор тарифа.",
            "example": 5
          }
        },
        "type": "object"
      },
      "create-rule": {
        "type": "object",
        "properties": {
          "balancer_proto": {
            "type": "string",
            "description": "Протокол балансировщика.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "balancer_port": {
            "type": "number",
            "description": "Порт балансировщика.",
            "example": 80
          },
          "server_proto": {
            "type": "string",
            "description": "Протокол сервера.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "server_port": {
            "type": "number",
            "description": "Порт сервера.",
            "example": 80
          }
        },
        "required": [
          "balancer_proto",
          "balancer_port",
          "server_proto",
          "server_port"
        ]
      },
      "update-rule": {
        "type": "object",
        "properties": {
          "balancer_proto": {
            "type": "string",
            "description": "Протокол балансировщика.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "balancer_port": {
            "type": "number",
            "description": "Порт балансировщика.",
            "example": 80
          },
          "server_proto": {
            "type": "string",
            "description": "Протокол сервера.",
            "enum": [
              "http",
              "http2",
              "https",
              "tcp"
            ],
            "example": "https"
          },
          "server_port": {
            "type": "number",
            "description": "Порт сервера.",
            "example": 80
          }
        },
        "required": [
          "balancer_proto",
          "balancer_port",
          "server_proto",
          "server_port"
        ]
      },
      "presets-balancer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра тарифа базы данных.",
            "example": 2377
          },
          "description": {
            "type": "string",
            "description": "Описание тарифа.",
            "example": "Услуга Балансировщик"
          },
          "description_short": {
            "type": "string",
            "description": "Краткое описание тарифа.",
            "example": "Устойчивый"
          },
          "bandwidth": {
            "type": "number",
            "description": "Пропускная способность тарифа.",
            "example": 100
          },
          "replica_count": {
            "type": "number",
            "description": "Количество реплик.",
            "example": 2
          },
          "request_per_second": {
            "type": "string",
            "description": "Запросов в секунду.",
            "example": "10K"
          },
          "price": {
            "type": "number",
            "description": "Стоимость тарифа базы данных.",
            "example": 100
          },
          "location": {
            "type": "string",
            "enum": [
              "ru-1",
              "pl-1",
              "kz-1"
            ],
            "description": "Географическое расположение тарифа.",
            "example": "ru-1"
          }
        },
        "required": [
          "id",
          "description",
          "description_short",
          "bandwidth",
          "replica_count",
          "request_per_second",
          "price",
          "location"
        ]
      },
      "config-parameters": {
        "properties": {
          "auto_increment_increment": {
            "type": "string",
            "description": "Интервал между значениями столбцов с атрибутом `AUTO_INCREMENT` (`mysql5` | `mysql`).",
            "example": "1"
          },
          "auto_increment_offset": {
            "type": "string",
            "description": "Начальное значение для столбцов с атрибутом `AUTO_INCREMENT` (`mysql5` | `mysql`).",
            "example": "1"
          },
          "innodb_io_capacity": {
            "type": "string",
            "description": "Количество операций ввода-вывода в секунду `IOPS` (`mysql5` | `mysql`).",
            "example": "200"
          },
          "innodb_purge_threads": {
            "type": "string",
            "description": "Количество потоков ввода-вывода, используемых для операций очистки (`mysql5` | `mysql`).",
            "example": "4"
          },
          "innodb_read_io_threads": {
            "type": "string",
            "description": "Количество потоков ввода-вывода, используемых для операций чтения (`mysql5` | `mysql`).",
            "example": "4"
          },
          "innodb_thread_concurrency": {
            "type": "string",
            "description": "Максимальное число потоков, которые могут исполняться (`mysql5` | `mysql`).",
            "example": "0"
          },
          "innodb_write_io_threads": {
            "type": "string",
            "description": "Количество потоков ввода-вывода, используемых для операций записи (`mysql5` | `mysql`).",
            "example": "4"
          },
          "join_buffer_size": {
            "type": "string",
            "description": "Минимальный размер буфера (`mysql5` | `mysql`).",
            "example": "262144"
          },
          "max_allowed_packet": {
            "type": "string",
            "description": "Максимальный размер одного пакета, строки или параметра, отправляемого функцией `mysql_stmt_send_long_data()` (`mysql5` | `mysql`).",
            "example": "16777216"
          },
          "max_heap_table_size": {
            "type": "string",
            "description": "Максимальный размер пользовательских MEMORY-таблиц (`mysql5` | `mysql`).",
            "example": "16777216"
          },
          "autovacuum_analyze_scale_factor": {
            "type": "string",
            "description": "Доля измененных или удаленных записей в таблице, при которой процесс автоочистки выполнит команду `ANALYZE` (`postgres`).",
            "example": "0.0001"
          },
          "bgwriter_delay": {
            "type": "string",
            "description": "Задержка между запусками процесса фоновой записи (`postgres`).",
            "example": "200"
          },
          "bgwriter_lru_maxpages": {
            "type": "string",
            "description": "Максимальное число элементов буферного кеша (`postgres`).",
            "example": "100"
          },
          "deadlock_timeout": {
            "type": "string",
            "description": "Время ожидания, по истечении которого будет выполняться проверка состояния перекрестной блокировки (`postgres`).",
            "example": "100"
          },
          "gin_pending_list_limit": {
            "type": "string",
            "description": "Максимальный размер очереди записей индекса `GIN` (`postgres`).",
            "example": "4194304"
          },
          "idle_in_transaction_session_timeout": {
            "type": "string",
            "description": "Время простоя открытой транзакции, при превышении которого будет завершена сессия с этой транзакцией (`postgres`).",
            "example": "0"
          },
          "idle_session_timeout": {
            "type": "string",
            "description": "Время простоя не открытой транзакции, при превышении которого будет завершена сессия с этой транзакцией (`postgres`).",
            "example": "0"
          },
          "join_collapse_limit": {
            "type": "string",
            "description": "Значение количества элементов в списке `FROM` при превышении которого, планировщик будет переносить в список явные инструкции `JOIN` (`postgres`).",
            "example": "8"
          },
          "lock_timeout": {
            "type": "string",
            "description": "Время ожидания освобождения блокировки (`postgres`).",
            "example": "0"
          },
          "max_prepared_transactions": {
            "type": "string",
            "description": "Максимальное число транзакций, которые могут одновременно находиться в подготовленном состоянии (`postgres`).",
            "example": "0"
          }
        }
      },
      "db": {
        "description": "База данных",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра базы данных. Автоматически генерируется при создании.",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда была создана база данных.",
            "example": "2021-02-25T11:04:15Z"
          },
          "account_id": {
            "type": "string",
            "description": "Идентификатор пользователя",
            "example": "cp78562"
          },
          "login": {
            "type": "string",
            "description": "Логин для подключения к базе данных.",
            "example": "test_user"
          },
          "password": {
            "type": "string",
            "description": "Пароль для подключения к базе данных.",
            "example": "password"
          },
          "name": {
            "type": "string",
            "description": "Название базы данных.",
            "example": "default_db"
          },
          "host": {
            "type": "string",
            "nullable": true,
            "description": "Хост.",
            "example": "test.ru"
          },
          "type": {
            "type": "string",
            "description": "Тип базы данных.",
            "enum": [
              "mysql",
              "mysql5",
              "postgres",
              "redis",
              "mongodb"
            ],
            "example": "mysql"
          },
          "hash_type": {
            "type": "string",
            "nullable": true,
            "description": "Тип хеширования базы данных (mysql5 | mysql | postgres).",
            "enum": [
              "caching_sha2",
              "mysql_native",
              null
            ],
            "example": "caching_sha2"
          },
          "port": {
            "type": "integer",
            "description": "Порт",
            "example": 3000
          },
          "ip": {
            "type": "string",
            "nullable": true,
            "format": "ipv4",
            "description": "IP-адрес сетевого интерфейса IPv4.",
            "example": "127.0.0.1"
          },
          "local_ip": {
            "type": "string",
            "nullable": true,
            "format": "ipv4",
            "description": "IP-адрес локального сетевого интерфейса IPv4.",
            "example": "127.0.0.1"
          },
          "status": {
            "type": "string",
            "description": "Текущий статус базы данных.",
            "enum": [
              "started",
              "starting",
              "stoped",
              "no_paid"
            ],
            "example": "started"
          },
          "preset_id": {
            "description": "Идентификатор тарифа.",
            "type": "integer",
            "example": 5
          },
          "disk_stats": {
            "type": "object",
            "nullable": true,
            "description": "Статистика использования диска базы данных.",
            "properties": {
              "size": {
                "type": "number",
                "description": "Размер (в Кб) диска базы данных.",
                "example": 10485760
              },
              "used": {
                "type": "number",
                "description": "Размер (в Кб) использованного пространства диска базы данных.",
                "example": 486.11328125
              }
            },
            "required": [
              "size",
              "used"
            ]
          },
          "config_parameters": {
            "$ref": "#/components/schemas/config-parameters"
          },
          "is_only_local_ip_access": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, доступна ли база данных только по локальному IP адресу.",
            "example": false
          }
        },
        "required": [
          "id",
          "created_at",
          "account_id",
          "login",
          "password",
          "name",
          "host",
          "type",
          "hash_type",
          "port",
          "ip",
          "local_ip",
          "status",
          "preset_id",
          "disk_stats",
          "config_parameters",
          "is_only_local_ip_access"
        ]
      },
      "create-db": {
        "properties": {
          "login": {
            "type": "string",
            "description": "Логин для подключения к базе данных.",
            "example": "test_user"
          },
          "password": {
            "type": "string",
            "description": "Пароль для подключения к базе данных.",
            "example": "password"
          },
          "name": {
            "type": "string",
            "description": "Название базы данных.",
            "example": "default_db"
          },
          "type": {
            "type": "string",
            "description": "Тип базы данных.",
            "enum": [
              "mysql",
              "mysql5",
              "postgres",
              "redis",
              "mongodb"
            ],
            "example": "mysql"
          },
          "hash_type": {
            "type": "string",
            "description": "Тип хеширования базы данных (mysql5 | mysql | postgres).",
            "enum": [
              "caching_sha2",
              "mysql_native"
            ],
            "example": "caching_sha2"
          },
          "preset_id": {
            "description": "Идентификатор тарифа.",
            "type": "integer",
            "example": 5
          },
          "config_parameters": {
            "$ref": "#/components/schemas/config-parameters"
          }
        },
        "type": "object",
        "required": [
          "name",
          "password",
          "preset_id",
          "type"
        ]
      },
      "update-db": {
        "description": "Дополнительные параметры конфигурации базы данных.",
        "properties": {
          "password": {
            "type": "string",
            "description": "Пароль для подключения к базе данных.",
            "example": "password"
          },
          "name": {
            "type": "string",
            "description": "Название базы данных.",
            "example": "default_db"
          },
          "preset_id": {
            "description": "Идентификатор тарифа.",
            "type": "integer",
            "example": 5
          },
          "config_parameters": {
            "$ref": "#/components/schemas/config-parameters"
          },
          "is_external_ip": {
            "description": "Использовать или нет внешний ip.",
            "type": "boolean",
            "example": true
          }
        },
        "type": "object"
      },
      "backup": {
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор резервной копии.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Название резервной копии.",
            "example": "test_name"
          },
          "comment": {
            "type": "string",
            "nullable": true,
            "description": "Комментарий.",
            "example": "test_comment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания.",
            "example": "2022-10-25T15:15:45.000Z"
          },
          "status": {
            "type": "string",
            "description": "Статус бэкапа.",
            "enum": [
              "precreate",
              "delete",
              "shutdown",
              "recover",
              "create",
              "fail",
              "done"
            ],
            "example": "recover"
          },
          "size": {
            "type": "integer",
            "description": "Размер резервной копии (Мб).",
            "example": 200
          },
          "type": {
            "type": "string",
            "description": "Тип бэкапа.",
            "enum": [
              "manual",
              "auto"
            ],
            "example": "manual"
          }
        },
        "required": [
          "id",
          "name",
          "comment",
          "created_at",
          "status",
          "size",
          "type"
        ],
        "type": "object"
      },
      "response-id_response_id": {
        "description": "Идентификатор запроса, который можно указывать при обращении в службу технической поддержки, чтобы помочь определить проблему.",
        "type": "string",
        "format": "uuid",
        "example": "15095f25-aac3-4d60-a788-96cb5136f186"
      },
      "presets-dbs": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра тарифа базы данных.",
            "example": 2377
          },
          "description": {
            "type": "string",
            "description": "Описание тарифа.",
            "example": "Услуга Управляемые базы данных"
          },
          "description_short": {
            "type": "string",
            "description": "Краткое описание тарифа.",
            "example": "Тариф 3"
          },
          "cpu": {
            "type": "number",
            "description": "Описание процессора тарифа.",
            "example": 2
          },
          "ram": {
            "type": "number",
            "description": "Описание ОЗУ тарифа.",
            "example": 8
          },
          "disk": {
            "type": "number",
            "description": "Описание диска тарифа.",
            "example": 30
          },
          "type": {
            "type": "string",
            "description": "Тип тарифа базы данных",
            "enum": [
              "mysql",
              "mysql5",
              "postgres",
              "redis",
              "mongodb"
            ],
            "example": "mysql"
          },
          "price": {
            "type": "number",
            "description": "Стоимость тарифа базы данных",
            "example": 100
          },
          "location": {
            "type": "string",
            "enum": [
              "ru-1",
              "pl-1",
              "kz-1"
            ],
            "description": "Географическое расположение тарифа.",
            "example": "ru-1"
          }
        }
      },
      "dedicated-server": {
        "description": "Выделенный сервер",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра выделенного сервера. Автоматически генерируется при создании.",
            "example": 1
          },
          "cpu_description": {
            "type": "string",
            "description": "Описание параметров процессора выделенного сервера.",
            "example": "Intel Xeon E3-1240v3"
          },
          "hdd_description": {
            "type": "string",
            "description": "Описание параметров жёсткого диска выделенного сервера.",
            "example": "2 x 1 ТБ HDD"
          },
          "ram_description": {
            "type": "string",
            "description": "Описание ОЗУ выделенного сервера.",
            "example": "8 Гб RAM"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда был создан выделенный сервер.",
            "example": "2022-10-25T15:15:45.000Z"
          },
          "ip": {
            "type": "string",
            "format": "ipv4",
            "nullable": true,
            "description": "IP-адрес сетевого интерфейса IPv4.",
            "example": "1.1.1.1"
          },
          "ipmi_ip": {
            "type": "string",
            "format": "ipv4",
            "nullable": true,
            "description": "IP-адрес сетевого интерфейса IPMI.",
            "example": "1.1.1.1"
          },
          "ipmi_login": {
            "type": "string",
            "nullable": true,
            "description": "Логин, используемый для входа в IPMI-консоль.",
            "example": "ipmi_login"
          },
          "ipmi_password": {
            "type": "string",
            "nullable": true,
            "description": "Пароль, используемый для входа в IPMI-консоль.",
            "example": "ipmi_password"
          },
          "ipv6": {
            "type": "string",
            "format": "ipv6",
            "nullable": true,
            "description": "IP-адрес сетевого интерфейса IPv6.",
            "example": "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
          },
          "node_id": {
            "type": "number",
            "nullable": true,
            "description": "Внутренний дополнительный идентификатор сервера.",
            "example": 68
          },
          "name": {
            "type": "string",
            "description": "Удобочитаемое имя, установленное для выделенного сервера.",
            "example": "Cute Quail"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к выделенному серверу.",
            "example": "Development Server"
          },
          "vnc_pass": {
            "type": "string",
            "nullable": true,
            "description": "Пароль для подключения к VNC-консоли выделенного сервера.",
            "example": "vnc_pass"
          },
          "status": {
            "type": "string",
            "description": "Строка состояния, указывающая состояние выделенного сервера. Может быть «installing», «installed», «on» или «off».",
            "enum": [
              "installing",
              "installed",
              "on",
              "off"
            ],
            "example": "installing"
          },
          "os_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор операционной системы, установленной на выделенный сервер.",
            "example": 44
          },
          "cp_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор панели управления, установленной на выделенный сервер.",
            "example": 16
          },
          "bandwidth_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор интернет-канала, установленного на выделенный сервер.",
            "example": 11
          },
          "network_drive_id": {
            "type": "array",
            "nullable": true,
            "description": "Массив уникальных идентификаторов сетевых дисков, подключенных к выделенному серверу.",
            "items": {
              "type": "number"
            },
            "example": [
              12,
              11
            ]
          },
          "additional_ip_addr_id": {
            "type": "array",
            "nullable": true,
            "description": "Массив уникальных идентификаторов дополнительных IP-адресов, подключенных к выделенному серверу.",
            "items": {
              "type": "number"
            },
            "example": [
              2,
              7
            ]
          },
          "plan_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор списка дополнительных услуг выделенного сервера.",
            "example": 2377
          },
          "price": {
            "type": "number",
            "description": "Стоимость выделенного сервера.",
            "example": 5490
          },
          "location": {
            "type": "string",
            "description": "Локация сервера.",
            "enum": [
              "ru-1",
              "pl-1",
              "kz-1"
            ],
            "example": "ru-1"
          },
          "autoinstall_ready": {
            "type": "number",
            "description": "Количество готовых к автоматической выдаче серверов. Если значение равно 0, сервер будет установлен через инженеров.",
            "example": 2
          }
        },
        "required": [
          "id",
          "cpu_description",
          "hdd_description",
          "ram_description",
          "created_at",
          "ip",
          "ipmi_ip",
          "ipmi_login",
          "ipmi_password",
          "ipv6",
          "node_id",
          "name",
          "comment",
          "vnc_pass",
          "status",
          "os_id",
          "cp_id",
          "bandwidth_id",
          "network_drive_id",
          "additional_ip_addr_id",
          "plan_id",
          "price",
          "location",
          "autoinstall_ready"
        ]
      },
      "create-dedicated-server": {
        "properties": {
          "plan_id": {
            "type": "number",
            "description": "Уникальный идентификатор списка дополнительных услуг выделенного сервера.",
            "example": 2377
          },
          "preset_id": {
            "type": "number",
            "description": "Уникальный идентификатор тарифа выделенного сервера.",
            "example": 81
          },
          "os_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор операционной системы, которая будет установлена на выделенный сервер.",
            "example": 188
          },
          "cp_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор панели управления, которая будет установлена на выделенный сервер.",
            "example": 199
          },
          "bandwidth_id": {
            "type": "number",
            "description": "Уникальный идентификатор интернет-канала, который будет установлен на выделенный сервер.",
            "example": 483
          },
          "network_drive_id": {
            "type": "number",
            "description": "Уникальный идентификатор сетевого диска, который будет установлен на выделенный сервер.",
            "example": 483
          },
          "additional_ip_addr_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор дополнительного IP-адреса, который будет установлен на выделенный сервер.",
            "example": 1
          },
          "payment_period": {
            "type": "string",
            "enum": [
              "P1M",
              "P3M",
              "P6M",
              "P1Y"
            ],
            "description": "Период оплаты.",
            "example": "P1M"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "description": "Удобочитаемое имя выделенного сервера. Максимальная длина — 255 символов, имя должно быть уникальным.",
            "example": "name"
          },
          "comment": {
            "type": "string",
            "maxLength": 255,
            "description": "Комментарий к выделенному серверу. Максимальная длина — 255 символов.",
            "example": "comment"
          }
        },
        "required": [
          "plan_id",
          "preset_id",
          "payment_period",
          "name",
          "location"
        ]
      },
      "dedicated-server-preset": {
        "description": "Выделенный сервер",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор тарифа выделенного сервера.",
            "example": 3017
          },
          "description": {
            "type": "string",
            "description": "Описание характеристик тарифа выделенного сервера.",
            "example": "Gold 6208U / 64 / 1N"
          },
          "is_ipmi_enabled": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, доступен ли IPMI у данного тарифа.",
            "example": true
          },
          "cpu": {
            "type": "object",
            "description": "Объект, содержащий информацию о процессоре выделенного сервера.",
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание характеристик процессора выделенного сервера.",
                "example": "Intel Xeon Gold 6208U\\r\\n    (16 ядер, 2.9-3.9 ГГц, 32 потока)"
              },
              "description_short": {
                "type": "string",
                "description": "Краткое описание характеристик процессора выделенного сервера.",
                "example": "Intel Xeon Gold 6208U"
              },
              "count": {
                "type": "number",
                "description": "Количество ядер процессора выделенного сервера.",
                "example": 16
              }
            },
            "required": [
              "description",
              "description_short",
              "count"
            ]
          },
          "disk": {
            "type": "object",
            "description": "Объект, содержащий информацию о диске выделенного сервера.",
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание характеристик диска выделенного сервера.",
                "example": "2 x 1 Тб NVMe"
              },
              "count": {
                "type": "number",
                "description": "Количество дисков выделенного сервера.",
                "example": 16
              }
            },
            "required": [
              "description",
              "count"
            ]
          },
          "price": {
            "type": "number",
            "description": "Стоимость тарифа выделенного сервера",
            "example": 100
          },
          "memory": {
            "type": "object",
            "description": "Объект, содержащий информацию об ОЗУ выделенного сервера.",
            "properties": {
              "description": {
                "type": "string",
                "description": "Описание характеристик ОЗУ выделенного сервера.",
                "example": "8 ГБ RAM"
              },
              "count": {
                "type": "number",
                "description": "Количество ОЗУ выделенного сервера.",
                "example": 1
              },
              "size": {
                "type": "number",
                "description": "Размер (в Мб) ОЗУ выделенного сервера.",
                "example": 65536
              }
            },
            "required": [
              "description",
              "count",
              "size"
            ]
          }
        },
        "required": [
          "id",
          "description",
          "is_ipmi_enabled",
          "cpu",
          "disk",
          "memory"
        ]
      },
      "dedicated-server-additional-service": {
        "description": "Дополнительная услуга для выделенного сервера",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор дополнительной услуги для выделенного сервера.",
            "example": 27
          },
          "price": {
            "type": "number",
            "description": "Стоимость (в рублях) дополнительной услуги для выделенного сервера.",
            "example": 55
          },
          "period": {
            "type": "string",
            "enum": [
              "P1D",
              "P1M",
              "P3M",
              "P6M",
              "P1Y",
              "forever"
            ],
            "description": "Период оплаты.",
            "example": "P1M"
          },
          "description": {
            "type": "string",
            "description": "Описание дополнительной услуги выделенного сервера.",
            "example": "Дополнительный IPv6 адрес"
          },
          "short_description": {
            "type": "string",
            "description": "Краткое описание дополнительной услуги выделенного сервера.",
            "example": "IPv6 адрес"
          },
          "name": {
            "type": "string",
            "format": "unique",
            "description": "Уникально имя дополнительной услуги выделенного сервера.",
            "example": "ipv6"
          }
        },
        "required": [
          "id",
          "price",
          "period",
          "description",
          "short_description",
          "name"
        ]
      },
      "ClusterOut": {
        "title": "ClusterOut",
        "required": [
          "id",
          "name",
          "created_at",
          "status",
          "description",
          "ha",
          "k8s_version",
          "network_driver",
          "ingress",
          "preset_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "Уникальный идентификатор кластера"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Название"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "Дата и время создания кластера в формате ISO8601",
            "format": "date-time"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "Статус"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Описание"
          },
          "ha": {
            "title": "Ha",
            "type": "boolean",
            "description": "Описание появится позже"
          },
          "k8s_version": {
            "title": "K8S Version",
            "type": "string",
            "description": "Версия Kubernetes"
          },
          "network_driver": {
            "title": "Network Driver",
            "type": "string",
            "description": "Используемый сетевой драйвер"
          },
          "ingress": {
            "title": "Ingress",
            "type": "boolean",
            "description": "Логическое значение, показыющее, включен ли Ingress"
          },
          "preset_id": {
            "title": "Preset Id",
            "type": "integer",
            "description": "Идентификатор тарифа мастер-ноды"
          },
          "cpu": {
            "title": "Cpu",
            "type": "integer",
            "description": "Общее количество ядер",
            "default": 0
          },
          "ram": {
            "title": "Ram",
            "type": "integer",
            "description": "Общее количество памяти",
            "default": 0
          },
          "disk": {
            "title": "Disk",
            "type": "integer",
            "description": "Общее дисковое пространство",
            "default": 0
          }
        }
      },
      "ClustersResponse": {
        "title": "ClustersResponse",
        "required": [
          "meta",
          "clusters"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "$ref": "#/components/schemas/Meta"
              }
            ],
            "description": "Вспомогательная информация о возвращаемой сущности"
          },
          "clusters": {
            "title": "Clusters",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterOut"
            },
            "description": "Массив объектов Кластер"
          }
        }
      },
      "schemas-BaseError": {
        "title": "BaseError",
        "required": [
          "status_code",
          "error_code",
          "message"
        ],
        "type": "object",
        "properties": {
          "status_code": {
            "title": "Status Code",
            "type": "integer"
          },
          "error_code": {
            "title": "Error Code",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {}
              }
            ]
          },
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "default": "fa25aa4b-aa47-4818-a327-94a2f8740f28"
          }
        }
      },
      "NodeGroupIn": {
        "title": "NodeGroupIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Название группы",
            "default": "default"
          },
          "preset_id": {
            "title": "Preset Id",
            "type": "integer",
            "description": "Идентификатор тарифа воркер-ноды",
            "default": 399
          },
          "node_count": {
            "title": "Node Count",
            "type": "integer",
            "description": "Количество нод в группе",
            "default": 1
          }
        },
        "required": [
          "name",
          "preset_id",
          "node_count"
        ],
        "example": {
          "name": "Новая группа нод",
          "preset_id": 399,
          "node_count": 1
        }
      },
      "ClusterIn": {
        "title": "ClusterIn",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Название кластера"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Описание кластера",
            "default": ""
          },
          "ha": {
            "title": "Ha",
            "type": "boolean",
            "description": "Описание появится позднее",
            "default": false
          },
          "k8s_version": {
            "title": "K8S Version",
            "type": "string",
            "description": "Версия Kubernetes",
            "default": "v1.22.16"
          },
          "network_driver": {
            "title": "Network Driver",
            "type": "string",
            "description": "Тип используемого сетевого драйвера в кластере",
            "default": "canal"
          },
          "ingress": {
            "title": "Ingress",
            "type": "boolean",
            "description": "Логическое значение, которое показывает, использовать ли Ingress в кластере",
            "default": true
          },
          "preset_id": {
            "title": "Preset Id",
            "type": "integer",
            "description": "Идентификатор тарифа мастер-ноды",
            "default": 403
          },
          "worker_groups": {
            "title": "Worker Groups",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NodeGroupIn"
            },
            "description": "Группы воркеров в кластере",
            "default": [
              {
                "name": "default",
                "preset_id": 399,
                "node_count": 1
              }
            ]
          }
        },
        "required": [
          "name",
          "ha",
          "k8s_version",
          "network_driver",
          "ingress",
          "preset_id"
        ],
        "example": {
          "name": "Fervent Pascal",
          "description": "Новый кластер кубернетес",
          "ha": false,
          "k8s_version": "v1.22.16",
          "network_driver": "canal",
          "ingress": true,
          "preset_id": 403
        }
      },
      "ClusterResponse": {
        "title": "ClusterResponse",
        "required": [
          "cluster"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "cluster": {
            "title": "Cluster",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClusterOut"
              }
            ],
            "description": "Кластер"
          }
        }
      },
      "ClusterEdit": {
        "title": "ClusterEdit",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Новое описание кластера",
            "example": "new description"
          }
        }
      },
      "Resource": {
        "title": "Resource",
        "type": "object",
        "properties": {
          "requested": {
            "title": "Requested",
            "type": "number",
            "description": "Запрошенное количество ресурса",
            "default": 0
          },
          "allocatable": {
            "title": "Allocatable",
            "type": "number",
            "description": "Доступное количество",
            "default": 0
          },
          "capacity": {
            "title": "Capacity",
            "type": "number",
            "description": "Общее количество",
            "default": 0
          },
          "used": {
            "title": "Used",
            "type": "number",
            "description": "Используемое количество",
            "default": 0
          }
        }
      },
      "Resources": {
        "title": "Resources",
        "type": "object",
        "properties": {
          "nodes": {
            "title": "Nodes",
            "type": "integer",
            "description": "Количество нод",
            "default": 0
          },
          "cores": {
            "title": "Cores",
            "allOf": [
              {
                "$ref": "#/components/schemas/Resource"
              }
            ],
            "description": "Процессорный ресурс",
            "default": {
              "requested": 0,
              "allocatable": 0,
              "capacity": 0,
              "used": 0
            }
          },
          "memory": {
            "title": "Memory",
            "allOf": [
              {
                "$ref": "#/components/schemas/Resource"
              }
            ],
            "description": "Ресурс по памяти",
            "default": {
              "requested": 0,
              "allocatable": 0,
              "capacity": 0,
              "used": 0
            }
          },
          "pods": {
            "title": "Pods",
            "allOf": [
              {
                "$ref": "#/components/schemas/Resource"
              }
            ],
            "description": "Поды в кластере",
            "default": {
              "requested": 0,
              "allocatable": 0,
              "capacity": 0,
              "used": 0
            }
          }
        }
      },
      "ResourcesResponse": {
        "title": "ResourcesResponse",
        "required": [
          "resources"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "resources": {
            "title": "Resources",
            "allOf": [
              {
                "$ref": "#/components/schemas/Resources"
              }
            ],
            "description": "Ресурсы кластера"
          }
        }
      },
      "NodeGroupOut": {
        "title": "NodeGroupOut",
        "required": [
          "id",
          "name",
          "created_at",
          "preset_id",
          "node_count"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "Уникальный идентификатор группы"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Название группы"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "Дата и время создания группы в формате ISO8601",
            "format": "date-time"
          },
          "preset_id": {
            "title": "Preset Id",
            "type": "integer",
            "description": "Идентификатор тарифа мастер-ноды"
          },
          "node_count": {
            "title": "Node Count",
            "type": "integer",
            "description": "Количество нод в группе"
          }
        }
      },
      "NodeGroupsResponse": {
        "title": "NodeGroupsResponse",
        "required": [
          "meta",
          "node_groups"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "$ref": "#/components/schemas/Meta"
              }
            ],
            "description": "Вспомогательная информация о возвращаемой сущности"
          },
          "node_groups": {
            "title": "Node Groups",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NodeGroupOut"
            },
            "description": "Массив объектов Группа нод"
          }
        }
      },
      "NodeGroupResponse": {
        "title": "NodeGroupResponse",
        "required": [
          "node_group"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "node_group": {
            "title": "Node Group",
            "allOf": [
              {
                "$ref": "#/components/schemas/NodeGroupOut"
              }
            ],
            "description": "Группа нод"
          }
        }
      },
      "NodeOut": {
        "title": "NodeOut",
        "required": [
          "id",
          "created_at",
          "type",
          "group_id",
          "status",
          "preset_id",
          "cpu",
          "ram",
          "disk",
          "network"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "Уникальный идентификатор ноды"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "description": "Дата и время создания ноды в формате ISO8601",
            "format": "date-time"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Тип ноды"
          },
          "group_id": {
            "title": "Group Id",
            "type": "integer",
            "description": "Идентификатор группы нод"
          },
          "status": {
            "title": "Status",
            "type": "string",
            "description": "Статус"
          },
          "preset_id": {
            "title": "Preset Id",
            "type": "integer",
            "description": "Идентификатор тарифа ноды"
          },
          "cpu": {
            "title": "Cpu",
            "type": "integer",
            "description": "Количество ядер"
          },
          "ram": {
            "title": "Ram",
            "type": "integer",
            "description": "Количество памяти"
          },
          "disk": {
            "title": "Disk",
            "type": "integer",
            "description": "Количество пространства"
          },
          "network": {
            "title": "Network",
            "type": "integer",
            "description": "Пропускная способность сети"
          }
        }
      },
      "NodesResponse": {
        "title": "NodesResponse",
        "required": [
          "meta",
          "nodes"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "$ref": "#/components/schemas/Meta"
              }
            ],
            "description": "Вспомогательная информация о возвращаемой сущности"
          },
          "nodes": {
            "title": "Nodes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NodeOut"
            },
            "description": "Массив объектов Нода"
          }
        }
      },
      "NodeCount": {
        "title": "NodeCount",
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "minimum": 0,
            "type": "integer",
            "description": "Количество нод",
            "example": 2
          }
        }
      },
      "K8SVersionsResponse": {
        "title": "K8SVersionsResponse",
        "required": [
          "meta",
          "k8s_versions"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "$ref": "#/components/schemas/Meta"
              }
            ],
            "description": "Вспомогательная информация о возвращаемой сущности"
          },
          "k8s_versions": {
            "title": "K8S Versions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Массив версий k8s"
          }
        }
      },
      "NetworkDriversResponse": {
        "title": "NetworkDriversResponse",
        "required": [
          "meta",
          "network_drivers"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "$ref": "#/components/schemas/Meta"
              }
            ],
            "description": "Вспомогательная информация о возвращаемой сущности"
          },
          "network_drivers": {
            "title": "Network Drivers",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Массив сетевых драйверов k8s"
          }
        }
      },
      "WorkerPresetOutApi": {
        "title": "WorkerPresetOutApi",
        "required": [
          "id",
          "description",
          "description_short",
          "price",
          "cpu",
          "ram",
          "disk",
          "network"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "Уникальный идентификатор тарифа"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Описание тарифа"
          },
          "description_short": {
            "title": "Description Short",
            "type": "string",
            "description": "Краткое описание тарифа"
          },
          "price": {
            "title": "Price",
            "type": "number",
            "description": "Стоимость"
          },
          "cpu": {
            "title": "Cpu",
            "type": "integer",
            "description": "Количество ядер ноды"
          },
          "ram": {
            "title": "Ram",
            "type": "integer",
            "description": "Количество памяти ноды"
          },
          "disk": {
            "title": "Disk",
            "type": "integer",
            "description": "Количество пространства на ноде"
          },
          "network": {
            "title": "Network",
            "type": "integer",
            "description": "Пропускная способность ноды"
          },
          "type": {
            "title": "Type",
            "enum": [
              "worker"
            ],
            "type": "string",
            "description": "Тип тарифа",
            "default": "worker"
          }
        }
      },
      "MasterPresetOutApi": {
        "title": "MasterPresetOutApi",
        "required": [
          "id",
          "description",
          "description_short",
          "price",
          "cpu",
          "ram",
          "disk",
          "network"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer",
            "description": "Уникальный идентификатор тарифа"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Описание тарифа"
          },
          "description_short": {
            "title": "Description Short",
            "type": "string",
            "description": "Краткое описание тарифа"
          },
          "price": {
            "title": "Price",
            "type": "number",
            "description": "Стоимость"
          },
          "cpu": {
            "title": "Cpu",
            "type": "integer",
            "description": "Количество ядер ноды"
          },
          "ram": {
            "title": "Ram",
            "type": "integer",
            "description": "Количество памяти ноды"
          },
          "disk": {
            "title": "Disk",
            "type": "integer",
            "description": "Количество пространства на ноде"
          },
          "network": {
            "title": "Network",
            "type": "integer",
            "description": "Пропускная способность ноды"
          },
          "type": {
            "title": "Type",
            "enum": [
              "master"
            ],
            "type": "string",
            "description": "Тип тарифа",
            "default": "master"
          },
          "limit": {
            "title": "Limit",
            "type": "integer",
            "description": "Ограничение по количеству воркер-нод в кластере"
          }
        }
      },
      "PresetsResponse": {
        "title": "PresetsResponse",
        "required": [
          "meta",
          "k8s_presets"
        ],
        "type": "object",
        "properties": {
          "response_id": {
            "title": "Response Id",
            "type": "string",
            "description": "Идентификатор запроса"
          },
          "meta": {
            "title": "Meta",
            "allOf": [
              {
                "$ref": "#/components/schemas/Meta"
              }
            ],
            "description": "Вспомогательная информация о возвращаемой сущности"
          },
          "k8s_presets": {
            "title": "K8S Presets",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkerPresetOutApi"
                },
                {
                  "$ref": "#/components/schemas/MasterPresetOutApi"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "worker": "#/components/schemas/WorkerPresetOutApi",
                  "master": "#/components/schemas/MasterPresetOutApi"
                }
              }
            },
            "description": "Массив тарифов k8s"
          }
        }
      },
      "vds": {
        "description": "Сервер",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра сервера. Автоматически генерируется при создании.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Удобочитаемое имя, установленное для выделенного сервера.",
            "example": "Cute Quail"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к выделенному серверу.",
            "example": "Development Server"
          },
          "os": {
            "type": "object",
            "description": "Операционная система сервера.",
            "properties": {
              "id": {
                "type": "number",
                "description": "Уникальный идентификатор операционной системы.",
                "example": 1
              },
              "name": {
                "type": "string",
                "description": "Тип операционной системы.",
                "enum": [
                  "bitrix",
                  "brainycp",
                  "centos",
                  "debian",
                  "fedora",
                  "freebsd",
                  "gentoo",
                  "routeros",
                  "ubuntu",
                  "windows"
                ]
              },
              "version": {
                "type": "string",
                "nullable": true,
                "description": "Версия операционной системы.",
                "example": "18.04"
              }
            },
            "required": [
              "id",
              "name",
              "version"
            ]
          },
          "software": {
            "type": "object",
            "description": "ПО из маркетплейса",
            "nullable": true,
            "properties": {
              "id": {
                "type": "number",
                "description": "Уникальный идентификатор ПО из маркетплейса",
                "example": 1
              },
              "name": {
                "type": "string",
                "description": "Название ПО из маркетплейса",
                "example": "name"
              }
            }
          },
          "preset_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор тарифа сервера.",
            "example": 11
          },
          "location": {
            "type": "string",
            "description": "Локация сервера.",
            "enum": [
              "ru-1",
              "pl-1",
              "kz-1"
            ],
            "example": "ru-1"
          },
          "configurator_id": {
            "type": "number",
            "nullable": true,
            "description": "Уникальный идентификатор конфигуратора сервера.",
            "example": 11
          },
          "boot_mode": {
            "type": "string",
            "description": "Режим загрузки ОС сервера.",
            "enum": [
              "std",
              "single",
              "cd"
            ],
            "example": "std"
          },
          "status": {
            "type": "string",
            "description": "Статус сервера.",
            "enum": [
              "installing",
              "software_install",
              "reinstalling",
              "on",
              "off",
              "turning_on",
              "turning_off",
              "hard_turning_off",
              "rebooting",
              "hard_rebooting",
              "removing",
              "removed",
              "cloning",
              "transfer",
              "blocked",
              "configuring",
              "no_paid",
              "permanent_blocked"
            ],
            "example": "on"
          },
          "start_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда был запущен сервер.",
            "example": "2022-10-25T15:15:45.000Z"
          },
          "is_ddos_guard": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, включена ли защита от DDOS у данного сервера.",
            "example": false
          },
          "cpu": {
            "type": "number",
            "description": "Количество ядер процессора сервера.",
            "example": 16
          },
          "cpu_frequency": {
            "type": "string",
            "description": "Частота ядер процессора сервера.",
            "example": "3.3"
          },
          "ram": {
            "type": "number",
            "description": "Размер (в Мб) ОЗУ сервера.",
            "example": 2048
          },
          "disks": {
            "type": "array",
            "description": "Список дисков сервера.",
            "items": {
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Уникальный идентификатор диска.",
                  "example": 1
                },
                "size": {
                  "type": "number",
                  "description": "Размер диска (в Мб).",
                  "example": 10240
                },
                "used": {
                  "type": "number",
                  "description": "Количество использованной памяти диска (в Мб).",
                  "example": 5120
                },
                "type": {
                  "type": "string",
                  "description": "Тип диска.",
                  "example": "nvme"
                },
                "is_mounted": {
                  "type": "boolean",
                  "description": "Является ли диск примонтированным.",
                  "example": true
                },
                "is_system": {
                  "type": "boolean",
                  "description": "Является ли диск системным.",
                  "example": true
                },
                "system_name": {
                  "type": "string",
                  "description": "Системное название диска.",
                  "example": "vda"
                },
                "status": {
                  "type": "string",
                  "description": "Статус диска.",
                  "example": "done"
                }
              },
              "required": [
                "id",
                "size",
                "used",
                "type",
                "is_mounted",
                "is_system",
                "system_name",
                "status"
              ]
            }
          },
          "avatar_id": {
            "type": "string",
            "nullable": true,
            "description": "Уникальный идентификатор аватара сервера. Описание методов работы с аватарами появится позднее.",
            "example": "avatar"
          },
          "vnc_pass": {
            "type": "string",
            "description": "Описание появится позднее.",
            "example": "password"
          },
          "networks": {
            "type": "array",
            "description": "Список сетей диска.",
            "items": {
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Тип сети.",
                  "enum": [
                    "public",
                    "local"
                  ],
                  "example": "public"
                },
                "nat_mode": {
                  "type": "string",
                  "description": "Тип преобразования сетевых адресов.",
                  "enum": [
                    "dnat_and_snat",
                    "snat",
                    "no_nat"
                  ],
                  "example": "dnat_and_snat"
                },
                "bandwidth": {
                  "type": "number",
                  "nullable": true,
                  "description": "Пропускная способность сети.",
                  "example": 200
                },
                "ips": {
                  "type": "array",
                  "description": "Список IP-адресов сети.",
                  "nullable": true,
                  "items": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Тип IP-адреса сети",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ],
                        "example": "ipv4"
                      },
                      "ip": {
                        "type": "string",
                        "description": "IP-адрес сети",
                        "example": "0.0.0.0"
                      },
                      "ptr": {
                        "type": "string",
                        "description": "Запись имени узла",
                        "example": "ptr"
                      },
                      "is_main": {
                        "type": "boolean",
                        "description": "Является ли сеть основной.",
                        "example": true
                      }
                    },
                    "required": [
                      "type",
                      "ip",
                      "is_main"
                    ]
                  }
                },
                "is_ddos_guard": {
                  "type": "boolean",
                  "description": "Подключена ли DDoS-защита. Только для публичных сетей",
                  "example": false
                }
              },
              "required": [
                "type",
                "ips"
              ]
            }
          }
        },
        "required": [
          "id",
          "name",
          "comment",
          "os",
          "software",
          "preset_id",
          "configurator_id",
          "location",
          "boot_mode",
          "status",
          "start_at",
          "is_ddos_guard",
          "cpu",
          "cpu_frequency",
          "ram",
          "disks",
          "avatar_id",
          "vnc_pass",
          "networks"
        ]
      },
      "create-server": {
        "properties": {
          "configuration": {
            "type": "object",
            "description": "Параметры конфигурации сервера. Нельзя передавать вместе с preset_id",
            "properties": {
              "configurator_id": {
                "type": "number",
                "description": "Уникальный идентификатор конфигуратора сервера",
                "example": 11
              },
              "disk": {
                "type": "number",
                "description": "Размер диска в МБ",
                "example": 15360
              },
              "cpu": {
                "type": "number",
                "description": "Количество ядер процессора",
                "example": 1
              },
              "ram": {
                "type": "number",
                "description": "Размер ОЗУ сервера в МБ",
                "example": 2048
              }
            },
            "required": [
              "configurator_id",
              "disk",
              "cpu",
              "ram"
            ]
          },
          "is_ddos_guard": {
            "type": "boolean",
            "description": "Защита от DDoS. Серверу выдается защищенный IP-адрес с защитой уровня L3 / L4. Для включения защиты уровня L7, необходимо создать тикет в техническую поддержку ",
            "example": true
          },
          "os_id": {
            "type": "number",
            "description": "Уникальный идентификатор операционной системы, которая будет установлена на выделенный сервер.",
            "example": 188
          },
          "software_id": {
            "type": "number",
            "description": "Уникальный идентификатор программного обеспечения сервера.",
            "example": 199
          },
          "preset_id": {
            "type": "number",
            "description": "Уникальный идентификатор тарифа сервера. Нельзя передавать вместе с ключом configurator",
            "example": 81
          },
          "bandwidth": {
            "type": "number",
            "description": "Пропускная способность тарифа. Доступные значения от 100 до 1000 с шагом 100",
            "example": 200
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "description": "Имя выделенного сервера. Максимальная длина — 255 символов, имя должно быть уникальным.",
            "example": "name"
          },
          "avatar_id": {
            "type": "string",
            "description": "Уникальный идентификатор аватара сервера. Описание методов работы с аватарами появится позднее.",
            "example": "avatar"
          },
          "comment": {
            "type": "string",
            "maxLength": 255,
            "description": "Комментарий к выделенному серверу. Максимальная длина — 255 символов.",
            "example": "comment"
          },
          "ssh_keys_ids": {
            "type": "array",
            "description": "Список SSH-ключей",
            "items": {
              "type": "number",
              "example": 1
            }
          },
          "is_local_network": {
            "type": "boolean",
            "description": "Локальная сеть",
            "example": false
          }
        },
        "required": [
          "is_ddos_guard",
          "os_id",
          "name",
          "bandwidth"
        ]
      },
      "update-server": {
        "properties": {
          "configurator": {
            "type": "object",
            "description": "Параметры конфигурации сервера. Нельзя передавать вместе с preset_id",
            "properties": {
              "configurator_id": {
                "type": "number",
                "description": "Уникальный идентификатор конфигуратора сервера",
                "example": 11
              },
              "disk": {
                "type": "number",
                "description": "Размер диска в МБ",
                "example": 15360
              },
              "cpu": {
                "type": "number",
                "description": "Количество ядер процессора",
                "example": 1
              },
              "ram": {
                "type": "number",
                "description": "Размер ОЗУ сервера в МБ",
                "example": 2048
              }
            }
          },
          "os_id": {
            "type": "number",
            "description": "Уникальный идентификатор операционной системы, которая будет установлена на выделенный сервер.",
            "example": 188
          },
          "software_id": {
            "type": "number",
            "description": "Уникальный идентификатор программного обеспечения сервера.",
            "example": 199
          },
          "preset_id": {
            "type": "number",
            "description": "Уникальный идентификатор тарифа сервера. Нельзя передавать вместе с ключом configurator",
            "example": 81
          },
          "bandwidth": {
            "type": "number",
            "description": "Пропускная способность тарифа. Доступные значения от 100 до 1000 с шагом 100",
            "example": 200
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "description": "Имя выделенного сервера. Максимальная длина — 255 символов, имя должно быть уникальным.",
            "example": "name"
          },
          "avatar_id": {
            "type": "string",
            "description": "Уникальный идентификатор аватара сервера. Описание методов работы с аватарами появится позднее.",
            "example": "avatar"
          },
          "comment": {
            "type": "string",
            "maxLength": 255,
            "description": "Комментарий к выделенному серверу. Максимальная длина — 255 символов.",
            "example": "comment"
          }
        }
      },
      "servers-os": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор операционной системы.",
            "example": 2377
          },
          "family": {
            "type": "string",
            "description": "Семейство операционной системы.",
            "example": "linux"
          },
          "name": {
            "type": "string",
            "description": "Название операционной системы.",
            "example": "debian"
          },
          "version": {
            "type": "string",
            "description": "Версия операционной системы.",
            "example": "6.0"
          },
          "version_codename": {
            "type": "string",
            "description": "Кодовое имя версии операционной системы.",
            "example": "squeeze"
          },
          "description": {
            "type": "string",
            "description": "Описание операционной системы.",
            "example": ""
          },
          "requirements": {
            "type": "object",
            "description": "Требования к облачному серверу для установки операционной системы.",
            "properties": {
              "cpu_min": {
                "type": "number",
                "description": "Минимальной значение процессора.",
                "example": 2
              },
              "disk_min": {
                "type": "number",
                "description": "Минимальное значение диска.",
                "example": 200
              },
              "ram_min": {
                "type": "number",
                "description": "Минимальное значение оперативной памяти.",
                "example": 4
              },
              "bandwidth_min": {
                "type": "number",
                "description": "Минимальное значение пропускной способности.",
                "example": 100
              }
            }
          }
        }
      },
      "servers-preset": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор тарифа сервера.",
            "example": 2377
          },
          "location": {
            "type": "string",
            "description": "Локация сервера.",
            "enum": [
              "ru-1",
              "pl-1",
              "kz-1"
            ],
            "example": "ru-1"
          },
          "price": {
            "type": "number",
            "description": "Стоимость в рублях.",
            "example": 199
          },
          "cpu": {
            "type": "number",
            "description": "Количество ядер процессора.",
            "example": "1"
          },
          "cpu_frequency": {
            "type": "string",
            "description": "Частота процессора.",
            "example": "3.3"
          },
          "ram": {
            "type": "number",
            "description": "Количество (в Мб) оперативной памяти.",
            "example": 1024
          },
          "disk": {
            "type": "number",
            "description": "Размер диска (в Мб).",
            "example": 15360
          },
          "disk_type": {
            "type": "string",
            "description": "Тип диска.",
            "enum": [
              "ssd",
              "nvme",
              "hdd"
            ],
            "example": "nvme"
          },
          "bandwidth": {
            "type": "number",
            "description": "Пропускная способность тарифа.",
            "example": 200
          },
          "description": {
            "type": "string",
            "description": "Описание тарифа.",
            "example": "description"
          },
          "description_short": {
            "type": "string",
            "description": "Короткое описание тарифа.",
            "example": "description_short"
          },
          "is_allowed_local_network": {
            "type": "boolean",
            "description": "Есть возможность подключения локальной сети",
            "example": false
          },
          "tags": {
            "type": "array",
            "description": "Список тегов тарифа.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "location",
          "price",
          "cpu",
          "cpu_frequency",
          "ram",
          "disk",
          "disk_type",
          "bandwidth",
          "description",
          "description_short",
          "is_allowed_local_network",
          "tags"
        ]
      },
      "servers-configurator": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор конфигуратора сервера.",
            "example": 3
          },
          "location": {
            "type": "string",
            "description": "Локация сервера.",
            "enum": [
              "ru-1",
              "pl-1",
              "kz-1"
            ],
            "example": "ru-1"
          },
          "disk_type": {
            "type": "string",
            "description": "Тип диска.",
            "enum": [
              "ssd",
              "nvme",
              "hdd"
            ],
            "example": "nvme"
          },
          "cpu_frequency": {
            "type": "string",
            "description": "Частота процессора.",
            "example": "3.3"
          },
          "requirements": {
            "properties": {
              "cpu_min": {
                "type": "number",
                "description": "Минимальное количество ядер процессора.",
                "example": 1
              },
              "cpu_step": {
                "type": "number",
                "description": "Размер шага ядер процессора.",
                "example": 1
              },
              "cpu_max": {
                "type": "number",
                "description": "Максимальное количество ядер процессора.",
                "example": 12
              },
              "ram_min": {
                "type": "number",
                "description": "Минимальное количество оперативной памяти (в Мб).",
                "example": 1024
              },
              "ram_step": {
                "type": "number",
                "description": "Размер шага оперативной памяти.",
                "example": 1024
              },
              "ram_max": {
                "type": "number",
                "description": "Максимальное количество оперативной памяти (в Мб).",
                "example": 8192
              },
              "disk_min": {
                "type": "number",
                "description": "Минимальный размер диска (в Мб).",
                "example": 10240
              },
              "disk_step": {
                "type": "number",
                "description": "Размер шага диска",
                "example": 1024
              },
              "disk_max": {
                "type": "number",
                "description": "Максимальный размер диска (в Мб).",
                "example": 30720
              }
            },
            "required": [
              "cpu_min",
              "cpu_step",
              "cpu_max",
              "ram_min",
              "ram_step",
              "ram_max",
              "disk_min",
              "disk_step",
              "disk_max"
            ]
          }
        },
        "required": [
          "id",
          "location",
          "disk_type",
          "cpu_frequency",
          "requirements"
        ]
      },
      "servers-software": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор ПО из маркетплейса.",
            "example": 2377
          },
          "name": {
            "type": "string",
            "description": "Имя ПО из маркетплейса.",
            "example": "iRedMail"
          },
          "os_ids": {
            "type": "array",
            "description": "Список id операционных систем, на которых доступна установка ПО.",
            "items": {
              "type": "number",
              "example": 2
            }
          },
          "description": {
            "type": "string",
            "description": "Описание ПО из маркетплейса.",
            "example": "iRedMail - полноценный почтовый сервер под Linux"
          },
          "requirements": {
            "type": "object",
            "description": "Требования к облачному серверу для установки ПО.",
            "properties": {
              "cpu_min": {
                "type": "number",
                "description": "Минимальной значение процессора.",
                "example": 2
              },
              "disk_min": {
                "type": "number",
                "description": "Минимальное значение диска.",
                "example": 200
              },
              "ram_min": {
                "type": "number",
                "description": "Минимальное значение оперативной памяти.",
                "example": 4
              },
              "bandwidth_min": {
                "type": "number",
                "description": "Минимальное значение пропускной способности.",
                "example": 100
              }
            }
          }
        }
      },
      "server-backup": {
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор бэкапа сервера.",
            "example": 3
          },
          "name": {
            "type": "string",
            "description": "Название бэкапа.",
            "example": "name"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к бэкапу.",
            "nullable": true,
            "example": "comment"
          },
          "created_at": {
            "type": "string",
            "description": "Дата создания бэкапа.",
            "example": "2022-08-24T14:15:22Z"
          },
          "status": {
            "type": "string",
            "description": "Статус бэкапа.",
            "enum": [
              "precreate",
              "delete",
              "shutdown",
              "recover",
              "create",
              "fail",
              "done"
            ],
            "example": "create"
          },
          "size": {
            "type": "number",
            "description": "Размер бэкапа (в Мб).",
            "example": 10240
          },
          "type": {
            "type": "string",
            "description": "Тип бэкапа.",
            "enum": [
              "manual",
              "auto"
            ],
            "example": "manual"
          }
        },
        "required": [
          "id",
          "name",
          "comment",
          "created_at",
          "status",
          "size",
          "type"
        ]
      },
      "project": {
        "description": "Проект",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого проекта. Автоматически генерируется при создании.",
            "example": 1
          },
          "account_id": {
            "type": "string",
            "description": "Идентификатор пользователя.",
            "example": "cp78562"
          },
          "avatar_id": {
            "type": "string",
            "nullable": true,
            "description": "Идентификатор аватара пользователя. Описание методов работы с аватарами появится позднее.",
            "example": "1664446660062"
          },
          "description": {
            "type": "string",
            "description": "Описание проекта.",
            "example": "Project description"
          },
          "name": {
            "type": "string",
            "description": "Удобочитаемое имя проекта.",
            "example": "Project"
          },
          "is_default": {
            "type": "boolean",
            "description": "Это логическое значение, которое показывает, выбран ли проект по умолчанию для создания новых сущностей.",
            "example": true
          }
        },
        "required": [
          "id",
          "account_id",
          "avatar_id",
          "description",
          "name",
          "is_default"
        ]
      },
      "create-project": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "description": "Удобочитаемое имя проекта. Максимальная длина — 255 символов.",
            "example": "Name"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 255,
            "description": "Описание проекта. Максимальная длина — 255 символов.",
            "example": "Description"
          },
          "avatar_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255,
            "description": "Идентификатор аватара пользователя. Описание методов работы с аватарами появится позднее.",
            "example": "1664446660062"
          }
        },
        "required": [
          "name"
        ]
      },
      "update-project": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "description": "Удобочитаемое имя проекта. Максимальная длина — 255 символов.",
            "example": "Name"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 255,
            "description": "Описание проекта. Максимальная длина — 255 символов.",
            "example": "Description"
          },
          "avatar_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 255,
            "description": "Идентификатор аватара пользователя. Описание методов работы с аватарами появится позднее.",
            "example": "1664446660062"
          }
        }
      },
      "project-resource": {
        "description": "Ресурс проекта",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого ресурса проекта. Автоматически генерируется при создании.",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда был создан ресурс.",
            "example": "2021-02-25T11:04:15Z"
          },
          "resource_id": {
            "type": "number",
            "description": "Идентификатор ресурса проекта (сервера, хранилища, кластера, балансировщика, базы данных или выделенного сервера).",
            "example": 1
          },
          "project": {
            "$ref": "#/components/schemas/project"
          },
          "type": {
            "type": "string",
            "description": "Тип ресурса проекта",
            "enum": [
              "server",
              "balancer",
              "database",
              "kubernetes",
              "storage",
              "dedicated"
            ],
            "example": "server"
          }
        },
        "required": [
          "id",
          "created_at",
          "resource_id",
          "project",
          "type"
        ]
      },
      "bucket": {
        "description": "Хранилище S3",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра хранилища. Автоматически генерируется при создании.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Удобочитаемое имя, установленное для хранилища.",
            "example": "Cute Quail"
          },
          "disk_stats": {
            "type": "object",
            "description": "Статистика использования диска хранилища.",
            "properties": {
              "size": {
                "type": "number",
                "description": "Размер (в Кб) диска хранилища.",
                "example": 10485760
              },
              "used": {
                "type": "number",
                "description": "Размер (в Кб) использованного пространства диска хранилища.",
                "example": 486.11328125
              }
            },
            "required": [
              "size",
              "used"
            ]
          },
          "type": {
            "type": "string",
            "description": "Тип хранилища.",
            "enum": [
              "private",
              "public"
            ],
            "example": "public"
          },
          "preset_id": {
            "type": "number",
            "nullable": true,
            "description": "Идентификатор тарифа хранилища.",
            "example": 389
          },
          "status": {
            "type": "string",
            "description": "Статус хранилища.",
            "enum": [
              "no_paid",
              "created",
              "transfer"
            ],
            "example": "created"
          },
          "object_amount": {
            "type": "number",
            "description": "Количество файлов в хранилище.",
            "example": 5
          },
          "location": {
            "type": "string",
            "description": "Регион хранилища.",
            "example": "ru-1"
          },
          "hostname": {
            "type": "string",
            "description": "Адрес хранилища для подключения.",
            "example": "s3.timeweb.com"
          },
          "access_key": {
            "type": "string",
            "description": "Ключ доступа от хранилища.",
            "example": "access_key"
          },
          "secret_key": {
            "type": "string",
            "description": "Секретный ключ доступа от хранилища.",
            "example": "secret_key"
          }
        },
        "required": [
          "id",
          "name",
          "disk_stats",
          "type",
          "preset_id",
          "status",
          "object_amount",
          "location",
          "hostname",
          "access_key",
          "secret_key"
        ]
      },
      "clusterk8s": {
        "description": "Кластер",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра крастера. Автоматически генерируется при создании.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Удобочитаемое имя, установленное для кластера.",
            "example": "Cute Quail"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда был создан кластер.",
            "example": "2022-10-25T15:15:45.000Z"
          },
          "status": {
            "type": "string",
            "description": "Статус кластера.",
            "enum": [
              "installing",
              "provisioning",
              "active",
              "unpaid"
            ],
            "example": "active"
          },
          "description": {
            "type": "string",
            "description": "Описание кластера.",
            "example": "Описание"
          },
          "ha": {
            "type": "boolean",
            "description": "Описание появится позднее.",
            "example": false
          },
          "k8s_version": {
            "type": "string",
            "description": "Версия k8s.",
            "example": "v1.19.16"
          },
          "network_driver": {
            "type": "string",
            "description": "Описание появится позднее.",
            "example": "canal"
          },
          "ingress": {
            "type": "boolean",
            "description": "Описание появится позднее.",
            "example": true
          },
          "cpu": {
            "type": "number",
            "description": "Количество ядер процессора кластера.",
            "example": 1
          },
          "ram": {
            "type": "number",
            "description": "Количество (в Мб) оперативной памяти кластера.",
            "example": 1024
          },
          "disk": {
            "type": "number",
            "description": "Размер (в Гб) диска кластера.",
            "example": "30"
          },
          "preset_id": {
            "type": "number",
            "description": "Тип сервиса кластера.",
            "example": 403
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "status",
          "description",
          "ha",
          "k8s_version",
          "network_driver",
          "ingress",
          "cpu",
          "ram",
          "disk",
          "preset_id"
        ]
      },
      "resource-transfer": {
        "properties": {
          "to_project": {
            "type": "number",
            "description": "Идентификатор проекта, куда переносится ресурс.",
            "example": 1
          },
          "resource_id": {
            "type": "number",
            "description": "Идентификатор перемещаемого ресурса (сервера, хранилища, кластера, балансировщика, базы данных или выделенного сервера).",
            "example": 1
          },
          "resource_type": {
            "type": "string",
            "description": "Тип перемещаемого ресурса.",
            "enum": [
              "server",
              "balancer",
              "database",
              "kubernetes",
              "storage",
              "dedicated"
            ],
            "example": "server"
          }
        },
        "required": [
          "to_project",
          "resource_id",
          "resource_type"
        ]
      },
      "presets-storage": {
        "type": "object",
        "description": "Тариф",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор для каждого экземпляра тарифа хранилища.",
            "example": 2377
          },
          "description": {
            "type": "string",
            "description": "Описание тарифа.",
            "example": "Услуга Хранилище S3"
          },
          "description_short": {
            "type": "string",
            "description": "Краткое описание тарифа.",
            "example": "Start"
          },
          "disk": {
            "type": "number",
            "description": "Описание диска хранилища.",
            "example": 30
          },
          "price": {
            "type": "number",
            "description": "Стоимость тарифа хранилища.",
            "example": 100
          },
          "location": {
            "type": "string",
            "enum": [
              "ru-1",
              "pl-1",
              "kz-1"
            ],
            "description": "Географическое расположение тарифа.",
            "example": "ru-1"
          }
        },
        "required": [
          "id",
          "description",
          "description_short",
          "disk",
          "price",
          "location"
        ]
      },
      "bucket-user": {
        "description": "Пользователь хранилища",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор пользователя.",
            "example": 1
          },
          "access_key": {
            "type": "string",
            "description": "Логин пользователя.",
            "example": "name"
          },
          "secret_key": {
            "type": "string",
            "description": "Пароль пользователя.",
            "example": "password"
          }
        },
        "required": [
          "id",
          "access_key",
          "secret_key"
        ]
      },
      "transfer-status": {
        "description": "Статус трансфера.",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Общий статус трансфера.",
            "enum": [
              "started",
              "suspended",
              "failed"
            ],
            "example": "started"
          },
          "tries": {
            "type": "number",
            "description": "Количество попыток.",
            "example": 1
          },
          "total_count": {
            "type": "number",
            "description": "Общее количество затронутых объектов.",
            "example": 0
          },
          "total_size": {
            "type": "number",
            "description": "Общий размер затронутых объектов.",
            "example": 0
          },
          "uploaded_count": {
            "type": "number",
            "description": "Количество перемещенных объектов.",
            "example": 0
          },
          "uploaded_size": {
            "type": "number",
            "description": "Размер перемещенных объектов.",
            "example": 0
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "description": "Текст ошибки.",
                  "example": "error"
                },
                "try": {
                  "type": "number",
                  "description": "Количество попыток.",
                  "example": 1
                }
              },
              "required": [
                "value",
                "try"
              ]
            }
          }
        },
        "required": [
          "status",
          "tries",
          "total_count",
          "total_size",
          "uploaded_count",
          "uploaded_size",
          "errors"
        ]
      },
      "subdomain": {
        "description": "Поддомен.",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор поддомена.",
            "example": 1
          },
          "subdomain": {
            "type": "string",
            "description": "Поддомен.",
            "example": "test.example.com"
          },
          "cert_released": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда был выдан SSL сертификат.",
            "example": "2022-10-25T15:15:45.000Z"
          },
          "tries": {
            "type": "number",
            "description": "Количество попыток перевыпустить SSL сертификат.",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "Поддомен.",
            "enum": [
              "ssl_released",
              "ssl_not_requested",
              "ssl_re_release_error"
            ]
          }
        },
        "required": [
          "id",
          "subdomain",
          "cert_released",
          "tries",
          "status"
        ]
      },
      "added-subdomain": {
        "description": "Добавленный поддомен.",
        "type": "object",
        "properties": {
          "subdomain": {
            "type": "string",
            "description": "Поддомен.",
            "example": "test.example.com"
          },
          "status": {
            "type": "string",
            "description": "Результат добавления поддомена.",
            "enum": [
              "success",
              "empty_cname",
              "duplicate",
              "failed"
            ],
            "example": "success"
          }
        },
        "required": [
          "subdomain",
          "status"
        ]
      },
      "s3-object": {
        "type": "object",
        "description": "An object consists of data and its descriptive metadata.",
        "properties": {
          "key": {
            "type": "string",
            "minLength": 1,
            "description": "Название файла или папки.",
            "example": "test.jpg"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда была сделана последняя модификация файла или папки."
          },
          "etag": {
            "type": "string",
            "description": "Тег.",
            "example": "d41d8cd98f00b204e9800998ecf8427e"
          },
          "size": {
            "type": "integer",
            "description": "Размер (в байтах) файла или папки.",
            "example": 21403
          },
          "storage_class": {
            "type": "string",
            "description": "Класс хранилища.",
            "example": "Default"
          },
          "checksum_algorithm": {
            "type": "array",
            "description": "Алгоритм",
            "items": {
              "type": "string"
            },
            "example": []
          },
          "owner": {
            "type": "object",
            "description": "Информация о владельце файла или папки.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Идентификатор владельца файла."
              },
              "display_name": {
                "type": "string",
                "description": "Имя владельца файла."
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Тип (файл или папка).",
            "enum": [
              "file",
              "directory"
            ],
            "example": "file"
          }
        },
        "required": [
          "type"
        ]
      },
      "api-key": {
        "type": "object",
        "description": "Токен.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Уникальный идентификатор токена.",
            "example": "913a3a06-1eb9-4e9c-bc63-6ca6944e883b"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда был создан токен.",
            "example": "2022-10-25T15:15:45.000Z"
          },
          "name": {
            "type": "string",
            "description": "Имя токена.",
            "example": "Example"
          },
          "expired_at": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда истекает токен.",
            "nullable": true,
            "example": "2022-10-25T15:15:45.000Z"
          }
        },
        "required": [
          "id",
          "created_at",
          "name",
          "expired_at"
        ]
      },
      "create-api-key": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя, установленное для токена.",
            "example": "Example"
          },
          "expire": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда истекает токен.",
            "example": "2022-10-25T15:15:45.000Z"
          }
        },
        "required": [
          "name"
        ]
      },
      "created-api-key": {
        "type": "object",
        "description": "Токен.",
        "properties": {
          "token": {
            "type": "string",
            "description": "Созданный токен, будет показан только один раз, его необходимо сохранить."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Уникальный идентификатор токена.",
            "example": "913a3a06-1eb9-4e9c-bc63-6ca6944e883b"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда был создан токен.",
            "example": "2022-10-25T15:15:45.000Z"
          },
          "name": {
            "type": "string",
            "description": "Имя токена.",
            "example": "Example"
          },
          "expired_at": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда истекает токен.",
            "nullable": true,
            "example": "2022-10-25T15:15:45.000Z"
          }
        },
        "required": [
          "token",
          "id",
          "created_at",
          "name",
          "expired_at"
        ]
      },
      "refresh-api-key": {
        "type": "object",
        "properties": {
          "expire": {
            "type": "string",
            "format": "date-time",
            "description": "Значение времени, указанное в комбинированном формате даты и времени ISO8601, которое представляет, когда истекает токен.",
            "example": "2022-10-25T15:15:45.000Z"
          }
        }
      },
      "rename-api-key": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя, установленное для токена.",
            "example": "Example"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "parameters": {
      "limit": {
        "description": "Обозначает количество записей, которое необходимо вернуть.",
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 100
        }
      },
      "offset": {
        "description": "Указывает на смещение, относительно начала списка.",
        "in": "query",
        "name": "offset",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 0
        }
      },
      "balancer-id": {
        "description": "Идентификатор балансировщика",
        "in": "path",
        "name": "balancer_id",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "rule-id": {
        "description": "Идентификатор правила для балансировщика",
        "in": "path",
        "name": "rule_id",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "dbs-id": {
        "description": "Идентификатор базы данных",
        "in": "path",
        "name": "db_id",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "backup-id": {
        "description": "Идентификатор резевной копии",
        "in": "path",
        "name": "backup_id",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "dedicated-id": {
        "in": "path",
        "name": "dedicated_id",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 1051
        },
        "description": "Уникальный идентификатор выделенного сервера."
      },
      "preset-id": {
        "in": "path",
        "name": "preset_id",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 1051
        },
        "description": "Уникальный идентификатор тарифа выделенного сервера."
      },
      "server-id": {
        "in": "path",
        "name": "server_id",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 1051
        },
        "description": "Уникальный идентификатор облачного сервера."
      },
      "disk-id": {
        "in": "path",
        "name": "disk_id",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 1051
        },
        "description": "Уникальный идентификатор диска сервера."
      },
      "server-backup-id": {
        "in": "path",
        "name": "backup_id",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 1051
        },
        "description": "Уникальный идентификатор бэкапа сервера."
      },
      "project-id": {
        "in": "path",
        "name": "project_id",
        "required": true,
        "schema": {
          "type": "number",
          "minimum": 1,
          "example": 99
        },
        "description": "Уникальный идентификатор проекта."
      },
      "bucket-id": {
        "in": "path",
        "name": "bucket_id",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 1051
        },
        "description": "Уникальный идентификатор хранилища."
      },
      "user-id": {
        "in": "path",
        "name": "user_id",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "example": 1051
        },
        "description": "Уникальный идентификатор пользователя хранилища."
      },
      "prefix": {
        "in": "query",
        "name": "prefix",
        "required": false,
        "schema": {
          "type": "string",
          "example": "example"
        },
        "description": "Префикс для поиска файла."
      },
      "multipart": {
        "in": "query",
        "name": "is_multipart",
        "required": false,
        "schema": {
          "type": "boolean",
          "example": true
        },
        "description": "Это логическое значение, которое используется для обозначения multipart загрузки."
      },
      "path": {
        "in": "query",
        "name": "path",
        "required": false,
        "schema": {
          "type": "string",
          "example": "test1/tes2"
        },
        "description": "Путь до директории в хранилище"
      },
      "api-key-id": {
        "description": "Идентификатор токена",
        "in": "path",
        "name": "token_id",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    }
  }
}